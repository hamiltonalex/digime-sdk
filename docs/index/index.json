{"interfaceLanguages":{"swift":[{"children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/contributing","title":"Contributing","type":"article"},{"path":"\/documentation\/digimesdk\/error-handling","title":"Error Handling","type":"article"},{"path":"\/documentation\/digimesdk\/scoping","title":"Scope","type":"article"},{"path":"\/documentation\/digimesdk\/writing-and-reading-raw-data","title":"Writing And Reading Raw Data","type":"article"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/callbackservice\/handlecallback(url:)","title":"func handleCallback(url: URL) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/callbackservice\/shared()","title":"class func shared() -> CallbackService","type":"method"}],"path":"\/documentation\/digimesdk\/callbackservice","title":"CallbackService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/consentaccesstimerange\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimesdk\/consentaccesstimerange\/init(type:description:from:to:)","title":"init(type: ContractTimeRangeType, description: String?, from: Date?, to: Date?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/consentaccesstimerange\/defaultlimits()","title":"func defaultLimits() -> TimeRangeLimits","type":"method"},{"path":"\/documentation\/digimesdk\/consentaccesstimerange\/verifytimerange(readoptions:)","title":"func verifyTimeRange(readOptions: ReadOptions?) -> TimeRangeLimits","type":"method"},{"path":"\/documentation\/digimesdk\/consentaccesstimerange\/verifytimerange(startdate:enddate:)","title":"func verifyTimeRange(startDate: Date, endDate: Date) -> TimeRangeLimits","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/consentaccesstimerange\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/consentaccesstimerange\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/consentaccesstimerange\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/consentaccesstimerange\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/consentaccesstimerange\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/consentaccesstimerange","title":"ConsentAccessTimeRange","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/credentialcache\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/credentialcache\/clearcredentials(for:)","title":"func clearCredentials(for: String) -> Bool","type":"method"},{"path":"\/documentation\/digimesdk\/credentialcache\/credentials(for:)","title":"func credentials(for: String) -> Credentials?","type":"method"},{"path":"\/documentation\/digimesdk\/credentialcache\/setcredentials(_:for:)","title":"func setCredentials(Credentials?, for: String)","type":"method"}],"path":"\/documentation\/digimesdk\/credentialcache","title":"CredentialCache","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/digime\/init(configuration:)","title":"init(configuration: Configuration)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/digime\/isdownloadingfiles","title":"var isDownloadingFiles: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/digime\/addservice(identifier:credentials:resultqueue:completion:)","title":"func addService(identifier: Int, credentials: Credentials, resultQueue: DispatchQueue, completion: (Result<Credentials, SDKError>) -> Void)","type":"method"},{"path":"\/documentation\/digimesdk\/digime\/applehealthstatisticscollectionquery(for:queryconfig:resultqueue:accounthandler:completion:)","title":"func appleHealthStatisticsCollectionQuery(for: String, queryConfig: HealthKitConfiguration, resultQueue: DispatchQueue, accountHandler: (SourceAccount) -> Void, completion: (StatisticsCompletionHandler))","type":"method"},{"path":"\/documentation\/digimesdk\/digime\/authorize(credentials:serviceid:readoptions:linktocontractwithcredentials:resultqueue:completion:)","title":"func authorize(credentials: Credentials?, serviceId: Int?, readOptions: ReadOptions?, linkToContractWithCredentials: Credentials?, resultQueue: DispatchQueue, completion: (Result<Credentials, SDKError>) -> Void)","type":"method"},{"path":"\/documentation\/digimesdk\/digime\/availableservices(contractid:filteravailable:resultqueue:completion:)","title":"func availableServices(contractId: String?, filterAvailable: Bool, resultQueue: DispatchQueue, completion: (Result<ServicesInfo, SDKError>) -> Void)","type":"method"},{"path":"\/documentation\/digimesdk\/digime\/clearcacheddata(for:)","title":"func clearCachedData(for: String)","type":"method"},{"path":"\/documentation\/digimesdk\/digime\/contractdetails(resultqueue:completion:)","title":"func contractDetails(resultQueue: DispatchQueue, completion: (Result<ContractVersion5, SDKError>) -> Void)","type":"method"},{"path":"\/documentation\/digimesdk\/digime\/deleteuser(credentials:resultqueue:completion:)","title":"func deleteUser(credentials: Credentials, resultQueue: DispatchQueue, completion: (SDKError?) -> Void)","type":"method"},{"path":"\/documentation\/digimesdk\/digime\/readaccounts(credentials:resultqueue:completion:)","title":"func readAccounts(credentials: Credentials, resultQueue: DispatchQueue, completion: (Result<AccountsInfo, SDKError>) -> Void)","type":"method"},{"path":"\/documentation\/digimesdk\/digime\/readallfiles(credentials:readoptions:resultqueue:downloadhandler:completion:)","title":"func readAllFiles(credentials: Credentials, readOptions: ReadOptions?, resultQueue: DispatchQueue, downloadHandler: (Result<File, SDKError>) -> Void, completion: (Result<(FileList, Credentials), SDKError>) -> Void)","type":"method"},{"path":"\/documentation\/digimesdk\/digime\/readfile(fileid:credentials:resultqueue:completion:)","title":"func readFile(fileId: String, credentials: Credentials, resultQueue: DispatchQueue, completion: (Result<File, SDKError>) -> Void)","type":"method"},{"path":"\/documentation\/digimesdk\/digime\/readfilelist(credentials:resultqueue:completion:)","title":"func readFileList(credentials: Credentials, resultQueue: DispatchQueue, completion: (Result<FileList, SDKError>) -> Void)","type":"method"},{"path":"\/documentation\/digimesdk\/digime\/requestdataquery(credentials:readoptions:resultqueue:completion:)","title":"func requestDataQuery(credentials: Credentials, readOptions: ReadOptions?, resultQueue: DispatchQueue, completion: (Result<Credentials, SDKError>) -> Void)","type":"method"},{"path":"\/documentation\/digimesdk\/digime\/savehealthdata(datatosave:completion:)","title":"func saveHealthData(dataToSave: [HKObject], completion: (Result<Bool, SDKError>) -> Void)","type":"method"},{"path":"\/documentation\/digimesdk\/digime\/write(data:metadata:credentials:resultqueue:completion:)","title":"func write(data: Data, metadata: RawFileMetadata, credentials: Credentials, resultQueue: DispatchQueue, completion: (Result<Credentials, SDKError>) -> Void)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/digime\/loglevels","title":"class var logLevels: [LogLevel]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/digime\/setloghandler(_:)","title":"class func setLogHandler(LogHandler)","type":"method"}],"path":"\/documentation\/digimesdk\/digime","title":"DigiMe","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/discoveryresource\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/discoveryresource\/aspectratio","title":"var aspectRatio: CGFloat","type":"property"},{"path":"\/documentation\/digimesdk\/discoveryresource\/height","title":"var height: CGFloat?","type":"property"},{"path":"\/documentation\/digimesdk\/discoveryresource\/mimetype","title":"var mimeType: String","type":"property"},{"path":"\/documentation\/digimesdk\/discoveryresource\/resizestrategy","title":"var resizeStrategy: String","type":"property"},{"path":"\/documentation\/digimesdk\/discoveryresource\/type","title":"var type: Int","type":"property"},{"path":"\/documentation\/digimesdk\/discoveryresource\/url","title":"var url: URL","type":"property"},{"path":"\/documentation\/digimesdk\/discoveryresource\/width","title":"var width: CGFloat?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/discoveryresource\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/discoveryresource\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/discoveryresource\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/discoveryresource\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/discoveryresource\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/discoveryresource","title":"DiscoveryResource","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/filepersistentstorage\/init(with:)","title":"init(with: FileManager.SearchPathDirectory)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/filepersistentstorage\/appendtofile(data:filename:)","title":"func appendToFile(data: Data, fileName: String)","type":"method"},{"path":"\/documentation\/digimesdk\/filepersistentstorage\/datapersist(for:)","title":"func dataPersist(for: String) -> Bool","type":"method"},{"path":"\/documentation\/digimesdk\/filepersistentstorage\/loaddata(for:)","title":"func loadData(for: String) -> Data?","type":"method"},{"path":"\/documentation\/digimesdk\/filepersistentstorage\/reset(filename:)","title":"func reset(fileName: String)","type":"method"},{"path":"\/documentation\/digimesdk\/filepersistentstorage\/store(data:filename:)","title":"func store(data: Data, fileName: String)","type":"method"},{"path":"\/documentation\/digimesdk\/filepersistentstorage\/store(file:)","title":"func store(file: File)","type":"method"},{"path":"\/documentation\/digimesdk\/filepersistentstorage\/store(object:filename:options:)","title":"func store(object: Any, fileName: String, options: JSONSerialization.WritingOptions)","type":"method"}],"path":"\/documentation\/digimesdk\/filepersistentstorage","title":"FilePersistentStorage","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/healthkitmanager\/executequery(_:)","title":"func executeQuery(Query)","type":"method"},{"path":"\/documentation\/digimesdk\/healthkitmanager\/preferredunits(for:completion:)","title":"func preferredUnits(for: [QuantityType], completion: PreferredUnitsCompeltion)","type":"method"},{"path":"\/documentation\/digimesdk\/healthkitmanager\/requestauthorization(toread:towrite:completion:)","title":"func requestAuthorization(toRead: [ObjectType], toWrite: [SampleType], completion: StatusCompletionBlock)","type":"method"},{"path":"\/documentation\/digimesdk\/healthkitmanager\/startwatchapp(with:completion:)","title":"func startWatchApp(with: WorkoutConfiguration, completion: StatusCompletionBlock)","type":"method"},{"path":"\/documentation\/digimesdk\/healthkitmanager\/stopquery(_:)","title":"func stopQuery(Query)","type":"method"}],"path":"\/documentation\/digimesdk\/healthkitmanager","title":"HealthKitManager","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/healthkitobserver\/disableallbackgrounddelivery(completionhandler:)","title":"func disableAllBackgroundDelivery(completionHandler: StatusCompletionBlock)","type":"method"},{"path":"\/documentation\/digimesdk\/healthkitobserver\/disablebackgrounddelivery(type:completionhandler:)","title":"func disableBackgroundDelivery(type: ObjectType, completionHandler: StatusCompletionBlock)","type":"method"},{"path":"\/documentation\/digimesdk\/healthkitobserver\/enablebackgrounddelivery(type:frequency:completionhandler:)","title":"func enableBackgroundDelivery(type: ObjectType, frequency: UpdateFrequency, completionHandler: StatusCompletionBlock)","type":"method"},{"path":"\/documentation\/digimesdk\/healthkitobserver\/observerquery(type:predicate:updatehandler:)","title":"func observerQuery(type: SampleType, predicate: NSPredicate?, updateHandler: ObserverUpdateHandler) throws -> ObserverQuery","type":"method"}],"path":"\/documentation\/digimesdk\/healthkitobserver","title":"HealthKitObserver","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/healthkitreader\/anchoredobjectquery(type:predicate:anchor:limit:monitorupdates:completionhandler:)","title":"func anchoredObjectQuery(type: SampleType, predicate: NSPredicate?, anchor: Anchor?, limit: Int, monitorUpdates: Bool, completionHandler: AnchoredResultsHandler) throws -> AnchoredObjectQuery","type":"method"},{"path":"\/documentation\/digimesdk\/healthkitreader\/categoryquery(type:predicate:sortdescriptors:limit:resultshandler:)","title":"func categoryQuery(type: CategoryType, predicate: NSPredicate?, sortDescriptors: [NSSortDescriptor], limit: Int, resultsHandler: CategoryResultsHandler) throws -> SampleQuery","type":"method"},{"path":"\/documentation\/digimesdk\/healthkitreader\/characteristics()","title":"func characteristics() -> Characteristic","type":"method"},{"path":"\/documentation\/digimesdk\/healthkitreader\/correlationquery(type:predicate:sortdescriptors:limit:resultshandler:)","title":"func correlationQuery(type: CorrelationType, predicate: NSPredicate?, sortDescriptors: [NSSortDescriptor], limit: Int, resultsHandler: CorrelationResultsHandler) throws -> SampleQuery","type":"method"},{"path":"\/documentation\/digimesdk\/healthkitreader\/correlationquery(type:predicate:typepredicates:completionhandler:)","title":"func correlationQuery(type: CorrelationType, predicate: NSPredicate?, typePredicates: [String : NSPredicate]?, completionHandler: CorrelationCompletionHandler) throws -> CorrelationQuery","type":"method"},{"path":"\/documentation\/digimesdk\/healthkitreader\/electrocardiogramquery(predicate:sortdescriptors:limit:withvoltagemeasurements:resultshandler:)","title":"func electrocardiogramQuery(predicate: NSPredicate?, sortDescriptors: [NSSortDescriptor], limit: Int, withVoltageMeasurements: Bool, resultsHandler: ElectrocardiogramResultsHandler) throws -> SampleQuery","type":"method"},{"path":"\/documentation\/digimesdk\/healthkitreader\/heartbeatseriesquery(predicate:sortdescriptors:limit:resultshandler:)","title":"func heartbeatSeriesQuery(predicate: NSPredicate?, sortDescriptors: [NSSortDescriptor], limit: Int, resultsHandler: HeartbeatSeriesResultsDataHandler) throws -> SampleQuery","type":"method"},{"path":"\/documentation\/digimesdk\/healthkitreader\/quantityquery(type:unit:predicate:sortdescriptors:limit:resultshandler:)","title":"func quantityQuery(type: QuantityType, unit: String, predicate: NSPredicate?, sortDescriptors: [NSSortDescriptor], limit: Int, resultsHandler: QuantityResultsHandler) throws -> SampleQuery","type":"method"},{"path":"\/documentation\/digimesdk\/healthkitreader\/queryactivitysummary(predicate:monitorupdates:completionhandler:)","title":"func queryActivitySummary(predicate: NSPredicate?, monitorUpdates: Bool, completionHandler: ActivitySummaryCompletionHandler) -> ActivitySummaryQuery","type":"method"},{"path":"\/documentation\/digimesdk\/healthkitreader\/samplequery(type:predicate:sortdescriptors:limit:resultshandler:)","title":"func sampleQuery(type: SampleType, predicate: NSPredicate?, sortDescriptors: [NSSortDescriptor], limit: Int, resultsHandler: SampleResultsHandler) throws -> SampleQuery","type":"method"},{"path":"\/documentation\/digimesdk\/healthkitreader\/sourcequery(type:predicate:completionhandler:)","title":"func sourceQuery(type: SampleType, predicate: NSPredicate?, completionHandler: SourceCompletionHandler) throws -> SourceQuery","type":"method"},{"path":"\/documentation\/digimesdk\/healthkitreader\/statisticscollectionquery(type:unit:quantitysamplepredicate:anchordate:enumeratefrom:enumerateto:intervalcomponents:mergeresultforsametype:monitorupdates:enumerationblock:)","title":"func statisticsCollectionQuery(type: QuantityType, unit: String, quantitySamplePredicate: NSPredicate?, anchorDate: Date, enumerateFrom: Date, enumerateTo: Date, intervalComponents: DateComponents, mergeResultForSameType: Bool, monitorUpdates: Bool, enumerationBlock: StatisticsCompletionHandler) throws -> StatisticsCollectionQuery","type":"method"},{"path":"\/documentation\/digimesdk\/healthkitreader\/statisticsquery(type:unit:predicate:completionhandler:)","title":"func statisticsQuery(type: QuantityType, unit: String, predicate: NSPredicate?, completionHandler: StatisticsCompletionHandler) throws -> StatisticsQuery","type":"method"},{"path":"\/documentation\/digimesdk\/healthkitreader\/workoutquery(predicate:sortdescriptors:limit:resultshandler:)","title":"func workoutQuery(predicate: NSPredicate?, sortDescriptors: [NSSortDescriptor], limit: Int, resultsHandler: WorkoutResultsHandler) throws -> SampleQuery","type":"method"},{"path":"\/documentation\/digimesdk\/healthkitreader\/workoutroutequery(predicate:sortdescriptors:limit:resultshandler:)","title":"func workoutRouteQuery(predicate: NSPredicate?, sortDescriptors: [NSSortDescriptor], limit: Int, resultsHandler: WorkoutRouteResultsDataHandler) throws -> SampleQuery","type":"method"}],"path":"\/documentation\/digimesdk\/healthkitreader","title":"HealthKitReader","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/healthkitservice\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/healthkitservice\/manager","title":"let manager: HealthKitManager","type":"property"},{"path":"\/documentation\/digimesdk\/healthkitservice\/observer","title":"let observer: HealthKitObserver","type":"property"},{"path":"\/documentation\/digimesdk\/healthkitservice\/reader","title":"let reader: HealthKitReader","type":"property"},{"path":"\/documentation\/digimesdk\/healthkitservice\/writer","title":"let writer: HealthKitWriter","type":"property"}],"path":"\/documentation\/digimesdk\/healthkitservice","title":"HealthKitService","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/healthkitwriter\/addcategory(_:from:to:completion:)","title":"func addCategory([Category], from: Device?, to: Workout, completion: StatusCompletionBlock)","type":"method"},{"path":"\/documentation\/digimesdk\/healthkitwriter\/addquantitiy(_:from:to:completion:)","title":"func addQuantitiy([Quantity], from: Device?, to: Workout, completion: StatusCompletionBlock)","type":"method"},{"path":"\/documentation\/digimesdk\/healthkitwriter\/delete(sample:completion:)","title":"func delete(sample: Sample, completion: StatusCompletionBlock)","type":"method"},{"path":"\/documentation\/digimesdk\/healthkitwriter\/deleteobjects(of:predicate:completion:)","title":"func deleteObjects(of: ObjectType, predicate: NSPredicate, completion: DeletionCompletionBlock)","type":"method"},{"path":"\/documentation\/digimesdk\/healthkitwriter\/isauthorizedtowrite(type:)","title":"func isAuthorizedToWrite(type: ObjectType) throws -> Bool","type":"method"},{"path":"\/documentation\/digimesdk\/healthkitwriter\/save(sample:completion:)","title":"func save(sample: Sample, completion: StatusCompletionBlock)","type":"method"},{"path":"\/documentation\/digimesdk\/healthkitwriter\/savedata(_:completion:)","title":"func saveData([HKObject], completion: (_ success: Bool, _ error: Error?) -> Void)","type":"method"}],"path":"\/documentation\/digimesdk\/healthkitwriter","title":"HealthKitWriter","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/rawfilemetadatabuilder\/init(mimetype:accounts:)","title":"init(mimeType: MimeType, accounts: [String])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/rawfilemetadatabuilder\/appid(_:)","title":"func appId(String) -> RawFileMetadataBuilder","type":"method"},{"path":"\/documentation\/digimesdk\/rawfilemetadatabuilder\/build()","title":"func build() -> RawFileMetadata","type":"method"},{"path":"\/documentation\/digimesdk\/rawfilemetadatabuilder\/contractid(_:)","title":"func contractId(String) -> RawFileMetadataBuilder","type":"method"},{"path":"\/documentation\/digimesdk\/rawfilemetadatabuilder\/objecttypes(_:)","title":"func objectTypes([RawFileMetadata.ObjectType]) -> RawFileMetadataBuilder","type":"method"},{"path":"\/documentation\/digimesdk\/rawfilemetadatabuilder\/providername(_:)","title":"func providerName(String) -> RawFileMetadataBuilder","type":"method"},{"path":"\/documentation\/digimesdk\/rawfilemetadatabuilder\/reference(_:)","title":"func reference([String]) -> RawFileMetadataBuilder","type":"method"},{"path":"\/documentation\/digimesdk\/rawfilemetadatabuilder\/servicegroups(_:)","title":"func serviceGroups([Int]) -> RawFileMetadataBuilder","type":"method"},{"path":"\/documentation\/digimesdk\/rawfilemetadatabuilder\/tags(_:)","title":"func tags([String]) -> RawFileMetadataBuilder","type":"method"}],"path":"\/documentation\/digimesdk\/rawfilemetadatabuilder","title":"RawFileMetadataBuilder","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/dated\/enddate","title":"var endDate: Date","type":"property"}],"path":"\/documentation\/digimesdk\/dated","title":"Dated","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/objecttype\/original","title":"var original: HKObjectType?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/objecttype\/make(from:)","title":"static func make(from: String) throws -> Self","type":"method"}],"path":"\/documentation\/digimesdk\/objecttype","title":"ObjectType","type":"protocol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/payload\/make(from:)","title":"static func make(from: [String : Any]) throws -> Self","type":"method"}],"path":"\/documentation\/digimesdk\/payload","title":"Payload","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/sample\/endtimestamp","title":"var endTimestamp: Double","type":"property"},{"path":"\/documentation\/digimesdk\/sample\/starttimestamp","title":"var startTimestamp: Double","type":"property"}],"path":"\/documentation\/digimesdk\/sample","title":"Sample","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/sampletype\/identifier","title":"var identifier: String?","type":"property"}],"path":"\/documentation\/digimesdk\/sampletype","title":"SampleType","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/unitconvertable\/converted(to:)","title":"func converted(to: String) throws -> Self","type":"method"}],"path":"\/documentation\/digimesdk\/unitconvertable","title":"UnitConvertable","type":"protocol"},{"path":"\/documentation\/digimesdk\/userdefaultstorable","title":"UserDefaultStorable","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/apierror\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/apierror\/code","title":"let code: String","type":"property"},{"path":"\/documentation\/digimesdk\/apierror\/message","title":"let message: String","type":"property"},{"path":"\/documentation\/digimesdk\/apierror\/reference","title":"let reference: String?","type":"property"}],"path":"\/documentation\/digimesdk\/apierror","title":"APIError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/accountservicedescriptor\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimesdk\/accountservicedescriptor\/init(name:logo:)","title":"init(name: String, logo: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/accountservicedescriptor\/logo","title":"let logo: String?","type":"property"},{"path":"\/documentation\/digimesdk\/accountservicedescriptor\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/accountservicedescriptor\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/accountservicedescriptor\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/accountservicedescriptor\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/accountservicedescriptor\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/accountservicedescriptor\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/accountservicedescriptor","title":"AccountServiceDescriptor","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/accountsinfo\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/accountsinfo\/accounts","title":"let accounts: [SourceAccount]","type":"property"},{"path":"\/documentation\/digimesdk\/accountsinfo\/consentid","title":"let consentId: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/accountsinfo\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/accountsinfo\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/accountsinfo\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/accountsinfo\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/accountsinfo\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/accountsinfo","title":"AccountsInfo","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/activitysummary\/harmonized-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/activitysummary\/harmonized-swift.struct\/activeenergyburned","title":"let activeEnergyBurned: Double","type":"property"},{"path":"\/documentation\/digimesdk\/activitysummary\/harmonized-swift.struct\/activeenergyburnedgoal","title":"let activeEnergyBurnedGoal: Double","type":"property"},{"path":"\/documentation\/digimesdk\/activitysummary\/harmonized-swift.struct\/activeenergyburnedunit","title":"let activeEnergyBurnedUnit: String","type":"property"},{"path":"\/documentation\/digimesdk\/activitysummary\/harmonized-swift.struct\/appleexercisetime","title":"let appleExerciseTime: Double","type":"property"},{"path":"\/documentation\/digimesdk\/activitysummary\/harmonized-swift.struct\/appleexercisetimegoal","title":"let appleExerciseTimeGoal: Double","type":"property"},{"path":"\/documentation\/digimesdk\/activitysummary\/harmonized-swift.struct\/appleexercisetimeunit","title":"let appleExerciseTimeUnit: String","type":"property"},{"path":"\/documentation\/digimesdk\/activitysummary\/harmonized-swift.struct\/applestandhours","title":"let appleStandHours: Double","type":"property"},{"path":"\/documentation\/digimesdk\/activitysummary\/harmonized-swift.struct\/applestandhoursgoal","title":"let appleStandHoursGoal: Double","type":"property"},{"path":"\/documentation\/digimesdk\/activitysummary\/harmonized-swift.struct\/applestandhoursunit","title":"let appleStandHoursUnit: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/activitysummary\/harmonized-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/activitysummary\/harmonized-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/activitysummary\/harmonized-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/activitysummary\/harmonized-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/activitysummary\/harmonized-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/activitysummary\/harmonized-swift.struct","title":"ActivitySummary.Harmonized","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/activitysummary\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/activitysummary\/date","title":"let date: String?","type":"property"},{"path":"\/documentation\/digimesdk\/activitysummary\/harmonized-swift.property","title":"let harmonized: Harmonized","type":"property"},{"path":"\/documentation\/digimesdk\/activitysummary\/identifier","title":"let identifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/activitysummary\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/activitysummary\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/activitysummary\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/activitysummary\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/activitysummary\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/activitysummary","title":"ActivitySummary","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/application\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/application\/environment","title":"let environment: Int?","type":"property"},{"path":"\/documentation\/digimesdk\/application\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/digimesdk\/application\/partnerid","title":"let partnerId: String?","type":"property"},{"path":"\/documentation\/digimesdk\/application\/resources","title":"let resources: Resources?","type":"property"},{"path":"\/documentation\/digimesdk\/application\/revision","title":"let revision: Int?","type":"property"},{"path":"\/documentation\/digimesdk\/application\/schemaversion","title":"let schemaVersion: String?","type":"property"},{"path":"\/documentation\/digimesdk\/application\/status","title":"let status: Int?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/application\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/application\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/application\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/application\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/application\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/application","title":"Application","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/category\/harmonized-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimesdk\/category\/harmonized-swift.struct\/init(value:description:detail:metadata:)","title":"init(value: Int, description: String, detail: String, metadata: Metadata?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/category\/harmonized-swift.struct\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/digimesdk\/category\/harmonized-swift.struct\/detail","title":"let detail: String","type":"property"},{"path":"\/documentation\/digimesdk\/category\/harmonized-swift.struct\/metadata","title":"let metadata: Metadata?","type":"property"},{"path":"\/documentation\/digimesdk\/category\/harmonized-swift.struct\/value","title":"let value: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/category\/harmonized-swift.struct\/copywith(value:description:detail:metadata:)","title":"func copyWith(value: Int?, description: String?, detail: String?, metadata: Metadata?) -> Harmonized","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/category\/harmonized-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/category\/harmonized-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/category\/harmonized-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/category\/harmonized-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/category\/harmonized-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/category\/harmonized-swift.struct\/make(from:)","title":"static func make(from: [String : Any]) throws -> Category.Harmonized","type":"method"}],"path":"\/documentation\/digimesdk\/category\/harmonized-swift.struct\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/category\/harmonized-swift.struct","title":"Category.Harmonized","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/category\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimesdk\/category\/init(identifier:starttimestamp:endtimestamp:device:sourcerevision:harmonized:)","title":"init(identifier: String, startTimestamp: Double, endTimestamp: Double, device: Device?, sourceRevision: SourceRevision, harmonized: Harmonized)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/category\/device","title":"let device: Device?","type":"property"},{"path":"\/documentation\/digimesdk\/category\/endtimestamp","title":"let endTimestamp: Double","type":"property"},{"path":"\/documentation\/digimesdk\/category\/harmonized-swift.property","title":"let harmonized: Harmonized","type":"property"},{"path":"\/documentation\/digimesdk\/category\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/digimesdk\/category\/sourcerevision","title":"let sourceRevision: SourceRevision","type":"property"},{"path":"\/documentation\/digimesdk\/category\/starttimestamp","title":"let startTimestamp: Double","type":"property"},{"path":"\/documentation\/digimesdk\/category\/uuid","title":"let uuid: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/category\/copywith(identifier:starttimestamp:endtimestamp:device:sourcerevision:harmonized:)","title":"func copyWith(identifier: String?, startTimestamp: Double?, endTimestamp: Double?, device: Device?, sourceRevision: SourceRevision?, harmonized: Harmonized?) -> Category","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/category\/collect(from:)","title":"static func collect(from: [Any]) throws -> [Category]","type":"method"},{"path":"\/documentation\/digimesdk\/category\/collect(results:)","title":"static func collect(results: [HKSample]) -> [Category]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/category\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/category\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/category\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/category\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/category\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/category\/make(from:)","title":"static func make(from: [String : Any]) throws -> Category","type":"method"}],"path":"\/documentation\/digimesdk\/category\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/category","title":"Category","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/characteristic\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/characteristic\/activitymovemode","title":"let activityMoveMode: String?","type":"property"},{"path":"\/documentation\/digimesdk\/characteristic\/biologicalsex","title":"let biologicalSex: String?","type":"property"},{"path":"\/documentation\/digimesdk\/characteristic\/birthday","title":"let birthday: String?","type":"property"},{"path":"\/documentation\/digimesdk\/characteristic\/bloodtype","title":"let bloodType: String?","type":"property"},{"path":"\/documentation\/digimesdk\/characteristic\/fitzpatrickskintype","title":"let fitzpatrickSkinType: String?","type":"property"},{"path":"\/documentation\/digimesdk\/characteristic\/wheelchairuse","title":"let wheelchairUse: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/characteristic\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/characteristic\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/characteristic\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/characteristic\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/characteristic\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/characteristic","title":"Characteristic","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/codableuserdefault\/init(key:userdefaults:)","title":"init<U>(key: U, userDefaults: UserDefaults)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/codableuserdefault\/wrappedvalue","title":"var wrappedValue: T?","type":"property"}],"path":"\/documentation\/digimesdk\/codableuserdefault","title":"CodableUserDefault","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/configuration\/init(appid:contractid:privatekey:authusingexternalbrowser:baseurl:)","title":"init(appId: String, contractId: String, privateKey: String, authUsingExternalBrowser: Bool, baseUrl: String?) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/configuration\/appid","title":"let appId: String","type":"property"},{"path":"\/documentation\/digimesdk\/configuration\/authusingexternalbrowser","title":"let authUsingExternalBrowser: Bool","type":"property"},{"path":"\/documentation\/digimesdk\/configuration\/baseurl","title":"let baseUrl: String?","type":"property"},{"path":"\/documentation\/digimesdk\/configuration\/contractid","title":"let contractId: String","type":"property"},{"path":"\/documentation\/digimesdk\/configuration\/privatekeydata","title":"let privateKeyData: Data","type":"property"}],"path":"\/documentation\/digimesdk\/configuration","title":"Configuration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/consentpolicy\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/consentpolicy\/description","title":"let description: String?","type":"property"},{"path":"\/documentation\/digimesdk\/consentpolicy\/sharetype","title":"let shareType: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/consentpolicy\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/consentpolicy\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/consentpolicy\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/consentpolicy\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/consentpolicy\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/consentpolicy","title":"ConsentPolicy","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/contractmetadata\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/contractmetadata\/oauth","title":"let oAuth: OAuth?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/contractmetadata\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/contractmetadata\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/contractmetadata\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/contractmetadata\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/contractmetadata\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/contractmetadata","title":"ContractMetadata","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/contractresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/contractresponse\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/contractresponse\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/contractresponse\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/contractresponse\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/contractresponse\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/contractresponse","title":"ContractResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/contractversion5\/init(_:)","title":"init?([AnyHashable : Any])","type":"init"},{"path":"\/documentation\/digimesdk\/contractversion5\/init(data:)","title":"init?(data: Data)","type":"init"},{"path":"\/documentation\/digimesdk\/contractversion5\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/contractversion5\/color","title":"let color: String?","type":"property"},{"path":"\/documentation\/digimesdk\/contractversion5\/datapush","title":"let dataPush: DataPush?","type":"property"},{"path":"\/documentation\/digimesdk\/contractversion5\/datarequest","title":"let dataRequest: DataRequest?","type":"property"},{"path":"\/documentation\/digimesdk\/contractversion5\/metadata","title":"let metadata: ContractMetadata?","type":"property"},{"path":"\/documentation\/digimesdk\/contractversion5\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/digimesdk\/contractversion5\/policies","title":"let policies: Policies?","type":"property"},{"path":"\/documentation\/digimesdk\/contractversion5\/resources","title":"let resources: Resources?","type":"property"},{"path":"\/documentation\/digimesdk\/contractversion5\/revision","title":"let revision: String?","type":"property"},{"path":"\/documentation\/digimesdk\/contractversion5\/schemaversion","title":"let schemaVersion: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/contractversion5\/verifytimerange(readoptions:)","title":"func verifyTimeRange(readOptions: ReadOptions?) -> Result<TimeRangeLimits, SDKError>","type":"method"},{"path":"\/documentation\/digimesdk\/contractversion5\/verifytimerange(startdate:enddate:)","title":"func verifyTimeRange(startDate: Date, endDate: Date) -> TimeRangeLimits","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/contractversion5\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/contractversion5\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/contractversion5\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/contractversion5\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/contractversion5\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/contractversion5","title":"ContractVersion5","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/correlation\/harmonized-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimesdk\/correlation\/harmonized-swift.struct\/init(quantitysamples:categorysamples:metadata:)","title":"init(quantitySamples: [Quantity], categorySamples: [Category], metadata: Metadata?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/correlation\/harmonized-swift.struct\/categorysamples","title":"let categorySamples: [Category]","type":"property"},{"path":"\/documentation\/digimesdk\/correlation\/harmonized-swift.struct\/metadata","title":"let metadata: Metadata?","type":"property"},{"path":"\/documentation\/digimesdk\/correlation\/harmonized-swift.struct\/quantitysamples","title":"let quantitySamples: [Quantity]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/correlation\/harmonized-swift.struct\/copywith(quantitysamples:categorysamples:metadata:)","title":"func copyWith(quantitySamples: [Quantity]?, categorySamples: [Category]?, metadata: Metadata?) -> Correlation.Harmonized","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/correlation\/harmonized-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/correlation\/harmonized-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/correlation\/harmonized-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/correlation\/harmonized-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/correlation\/harmonized-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/correlation\/harmonized-swift.struct\/make(from:)","title":"static func make(from: [String : Any]) throws -> Correlation.Harmonized","type":"method"}],"path":"\/documentation\/digimesdk\/correlation\/harmonized-swift.struct\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/correlation\/harmonized-swift.struct","title":"Correlation.Harmonized","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/correlation\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimesdk\/correlation\/init(identifier:starttimestamp:endtimestamp:device:sourcerevision:harmonized:)","title":"init(identifier: String, startTimestamp: Double, endTimestamp: Double, device: Device?, sourceRevision: SourceRevision, harmonized: Correlation.Harmonized)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/correlation\/device","title":"let device: Device?","type":"property"},{"path":"\/documentation\/digimesdk\/correlation\/endtimestamp","title":"let endTimestamp: Double","type":"property"},{"path":"\/documentation\/digimesdk\/correlation\/harmonized-swift.property","title":"let harmonized: Harmonized","type":"property"},{"path":"\/documentation\/digimesdk\/correlation\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/digimesdk\/correlation\/sourcerevision","title":"let sourceRevision: SourceRevision","type":"property"},{"path":"\/documentation\/digimesdk\/correlation\/starttimestamp","title":"let startTimestamp: Double","type":"property"},{"path":"\/documentation\/digimesdk\/correlation\/uuid","title":"let uuid: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/correlation\/copywith(identifier:starttimestamp:endtimestamp:device:sourcerevision:harmonized:)","title":"func copyWith(identifier: String?, startTimestamp: Double?, endTimestamp: Double?, device: Device?, sourceRevision: SourceRevision?, harmonized: Harmonized?) -> Correlation","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/correlation\/collect(results:)","title":"static func collect(results: [HKSample]) -> [Correlation]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/correlation\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/correlation\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/correlation\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/correlation\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/correlation\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/correlation\/make(from:)","title":"static func make(from: [String : Any]) throws -> Correlation","type":"method"}],"path":"\/documentation\/digimesdk\/correlation\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/correlation","title":"Correlation","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/credentials\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/credentials\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/credentials\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/credentials\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/credentials\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/credentials\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/credentials","title":"Credentials","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/criteria\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/criteria\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/criteria\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/criteria\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/criteria\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/criteria\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/criteria","title":"Criteria","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/dataimporter\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/dataimporter\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/digimesdk\/dataimporter\/resources","title":"let resources: Resources?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/dataimporter\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/dataimporter\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/dataimporter\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/dataimporter\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/dataimporter\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/dataimporter","title":"DataImporter","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/datapush\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/datapush\/callbackurl","title":"let callbackUrl: String?","type":"property"},{"path":"\/documentation\/digimesdk\/datapush\/consentpolicy","title":"let consentPolicy: String?","type":"property"},{"path":"\/documentation\/digimesdk\/datapush\/content","title":"let content: [String]?","type":"property"},{"path":"\/documentation\/digimesdk\/datapush\/disclamer","title":"let disclamer: String?","type":"property"},{"path":"\/documentation\/digimesdk\/datapush\/frequency","title":"let frequency: String?","type":"property"},{"path":"\/documentation\/digimesdk\/datapush\/mappedservice","title":"let mappedService: String?","type":"property"},{"path":"\/documentation\/digimesdk\/datapush\/purpose","title":"let purpose: String?","type":"property"},{"path":"\/documentation\/digimesdk\/datapush\/type","title":"let type: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/datapush\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/datapush\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/datapush\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/datapush\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/datapush\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/datapush","title":"DataPush","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/datarequest\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/datarequest\/consentpolicy","title":"let consentPolicy: ConsentPolicy?","type":"property"},{"path":"\/documentation\/digimesdk\/datarequest\/criteria","title":"let criteria: Criteria?","type":"property"},{"path":"\/documentation\/digimesdk\/datarequest\/dataimporter","title":"let dataImporter: DataImporter?","type":"property"},{"path":"\/documentation\/digimesdk\/datarequest\/dataretention","title":"let dataRetention: DataRetentionPolicy?","type":"property"},{"path":"\/documentation\/digimesdk\/datarequest\/datatransportpolicy","title":"let dataTransportPolicy: DataTransportPolicy?","type":"property"},{"path":"\/documentation\/digimesdk\/datarequest\/disclaimer","title":"let disclaimer: String?","type":"property"},{"path":"\/documentation\/digimesdk\/datarequest\/externalsharepolicy","title":"let externalSharePolicy: ExternalSharePolicy?","type":"property"},{"path":"\/documentation\/digimesdk\/datarequest\/gdpr","title":"let gdpr: GDPR?","type":"property"},{"path":"\/documentation\/digimesdk\/datarequest\/purpose","title":"let purpose: String?","type":"property"},{"path":"\/documentation\/digimesdk\/datarequest\/servicegroups","title":"let serviceGroups: [ServiceGroupCodable]?","type":"property"},{"path":"\/documentation\/digimesdk\/datarequest\/timeranges","title":"let timeRanges: [ConsentAccessTimeRange]?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/datarequest\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/datarequest\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/datarequest\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/datarequest\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/datarequest\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/datarequest","title":"DataRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/dataretentionpolicy\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/dataretentionpolicy\/dataretained","title":"let dataRetained: Bool?","type":"property"},{"path":"\/documentation\/digimesdk\/dataretentionpolicy\/description","title":"let description: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/dataretentionpolicy\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/dataretentionpolicy\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/dataretentionpolicy\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/dataretentionpolicy\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/dataretentionpolicy\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/dataretentionpolicy","title":"DataRetentionPolicy","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/datatransportpolicy\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/datatransportpolicy\/description","title":"let description: String?","type":"property"},{"path":"\/documentation\/digimesdk\/datatransportpolicy\/leavesdevice","title":"let leavesDevice: Bool?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/datatransportpolicy\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/datatransportpolicy\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/datatransportpolicy\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/datatransportpolicy\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/datatransportpolicy\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/datatransportpolicy","title":"DataTransportPolicy","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/deletedobject\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/deletedobject\/metadata","title":"let metadata: Metadata?","type":"property"},{"path":"\/documentation\/digimesdk\/deletedobject\/uuid","title":"let uuid: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/deletedobject\/collect(deletedobjects:)","title":"static func collect(deletedObjects: [HKDeletedObject]?) -> [DeletedObject]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/deletedobject\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/deletedobject\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/deletedobject\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/deletedobject\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/deletedobject\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/deletedobject","title":"DeletedObject","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/deliverymode\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/deliverymode\/redirecturi","title":"let redirectUri: String?","type":"property"},{"path":"\/documentation\/digimesdk\/deliverymode\/type","title":"let type: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/deliverymode\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/deliverymode\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/deliverymode\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/deliverymode\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/deliverymode\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/deliverymode","title":"DeliveryMode","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/device\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimesdk\/device\/init(name:manufacturer:model:hardwareversion:firmwareversion:softwareversion:localidentifier:udideviceidentifier:)","title":"init(name: String?, manufacturer: String?, model: String?, hardwareVersion: String?, firmwareVersion: String?, softwareVersion: String?, localIdentifier: String?, udiDeviceIdentifier: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/device\/firmwareversion","title":"let firmwareVersion: String?","type":"property"},{"path":"\/documentation\/digimesdk\/device\/hardwareversion","title":"let hardwareVersion: String?","type":"property"},{"path":"\/documentation\/digimesdk\/device\/localidentifier","title":"let localIdentifier: String?","type":"property"},{"path":"\/documentation\/digimesdk\/device\/manufacturer","title":"let manufacturer: String?","type":"property"},{"path":"\/documentation\/digimesdk\/device\/model","title":"let model: String?","type":"property"},{"path":"\/documentation\/digimesdk\/device\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/digimesdk\/device\/softwareversion","title":"let softwareVersion: String?","type":"property"},{"path":"\/documentation\/digimesdk\/device\/udideviceidentifier","title":"let udiDeviceIdentifier: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/device\/copywith(name:manufacturer:model:hardwareversion:firmwareversion:softwareversion:localidentifier:udideviceidentifier:)","title":"func copyWith(name: String?, manufacturer: String?, model: String?, hardwareVersion: String?, firmwareVersion: String?, softwareVersion: String?, localIdentifier: String?, udiDeviceIdentifier: String?) -> Device","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/device\/local()","title":"static func local() -> Device","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/device\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/device\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/device\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/device\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/device\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/device\/make(from:)","title":"static func make(from: [String : Any]) throws -> Device","type":"method"}],"path":"\/documentation\/digimesdk\/device\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/device","title":"Device","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/duration\/unlimited()","title":"static func unlimited() -> Duration","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/duration\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/duration\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/duration\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/duration\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/duration\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/duration\/init(integerliteral:)","title":"init(integerLiteral: Int)","type":"init"}],"path":"\/documentation\/digimesdk\/duration\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/duration","title":"Duration","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/harmonized-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/harmonized-swift.struct\/averageheartrate","title":"let averageHeartRate: Double?","type":"property"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/harmonized-swift.struct\/averageheartrateunit","title":"let averageHeartRateUnit: String","type":"property"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/harmonized-swift.struct\/classification","title":"let classification: String","type":"property"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/harmonized-swift.struct\/count","title":"let count: Int","type":"property"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/harmonized-swift.struct\/metadata","title":"let metadata: Metadata?","type":"property"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/harmonized-swift.struct\/samplingfrequency","title":"let samplingFrequency: Double","type":"property"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/harmonized-swift.struct\/samplingfrequencyunit","title":"let samplingFrequencyUnit: String","type":"property"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/harmonized-swift.struct\/symptomsstatus","title":"let symptomsStatus: String","type":"property"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/harmonized-swift.struct\/voltagemeasurements","title":"let voltageMeasurements: [VoltageMeasurement]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/harmonized-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/harmonized-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/harmonized-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/harmonized-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/electrocardiogram\/harmonized-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/harmonized-swift.struct\/make(from:)","title":"static func make(from: [String : Any]) throws -> Electrocardiogram.Harmonized","type":"method"}],"path":"\/documentation\/digimesdk\/electrocardiogram\/harmonized-swift.struct\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/electrocardiogram\/harmonized-swift.struct","title":"Electrocardiogram.Harmonized","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/voltagemeasurement\/harmonized-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/voltagemeasurement\/harmonized-swift.struct\/unit","title":"let unit: String","type":"property"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/voltagemeasurement\/harmonized-swift.struct\/value","title":"let value: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/voltagemeasurement\/harmonized-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/voltagemeasurement\/harmonized-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/voltagemeasurement\/harmonized-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/voltagemeasurement\/harmonized-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/electrocardiogram\/voltagemeasurement\/harmonized-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/voltagemeasurement\/harmonized-swift.struct\/make(from:)","title":"static func make(from: [String : Any]) throws -> Electrocardiogram.VoltageMeasurement.Harmonized","type":"method"}],"path":"\/documentation\/digimesdk\/electrocardiogram\/voltagemeasurement\/harmonized-swift.struct\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/electrocardiogram\/voltagemeasurement\/harmonized-swift.struct","title":"Electrocardiogram.VoltageMeasurement.Harmonized","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/voltagemeasurement\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/voltagemeasurement\/harmonized-swift.property","title":"let harmonized: Harmonized","type":"property"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/voltagemeasurement\/timesincesamplestart","title":"let timeSinceSampleStart: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/voltagemeasurement\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/voltagemeasurement\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/voltagemeasurement\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/voltagemeasurement\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/electrocardiogram\/voltagemeasurement\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/voltagemeasurement\/make(from:)","title":"static func make(from: [String : Any]) throws -> Electrocardiogram.VoltageMeasurement","type":"method"}],"path":"\/documentation\/digimesdk\/electrocardiogram\/voltagemeasurement\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/electrocardiogram\/voltagemeasurement","title":"Electrocardiogram.VoltageMeasurement","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/device","title":"let device: Device?","type":"property"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/endtimestamp","title":"let endTimestamp: Double","type":"property"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/harmonized-swift.property","title":"let harmonized: Harmonized","type":"property"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/numberofmeasurements","title":"let numberOfMeasurements: Int","type":"property"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/sourcerevision","title":"let sourceRevision: SourceRevision","type":"property"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/starttimestamp","title":"let startTimestamp: Double","type":"property"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/uuid","title":"let uuid: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/electrocardiogram\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/electrocardiogram\/make(from:)","title":"static func make(from: [String : Any]) throws -> Electrocardiogram","type":"method"}],"path":"\/documentation\/digimesdk\/electrocardiogram\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/electrocardiogram","title":"Electrocardiogram","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/externalsharepolicy\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/externalsharepolicy\/description","title":"let description: String?","type":"property"},{"path":"\/documentation\/digimesdk\/externalsharepolicy\/sharedexternally","title":"let sharedExternally: Bool?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/externalsharepolicy\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/externalsharepolicy\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/externalsharepolicy\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/externalsharepolicy\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/externalsharepolicy\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/externalsharepolicy","title":"ExternalSharePolicy","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/file\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/file\/data","title":"let data: Data","type":"property"},{"path":"\/documentation\/digimesdk\/file\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/digimesdk\/file\/metadata","title":"let metadata: FileMetadata","type":"property"},{"path":"\/documentation\/digimesdk\/file\/mimetype","title":"var mimeType: MimeType","type":"property"},{"path":"\/documentation\/digimesdk\/file\/updateddate","title":"let updatedDate: Date","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/file\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/digimesdk\/file\/toimage()","title":"func toImage() -> UIImage?","type":"method"},{"path":"\/documentation\/digimesdk\/file\/tojson(persistresult:)","title":"func toJSON(persistResult: Bool) -> Any?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/file\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/file\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/file\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/file\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/file\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/file","title":"File","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/filelist\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/filelist\/files","title":"let files: [FileListItem]?","type":"property"},{"path":"\/documentation\/digimesdk\/filelist\/status","title":"let status: SyncStatus","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/filelist\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimesdk\/filelist\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/filelist","title":"FileList","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/filelistitem\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/filelistitem\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/filelistitem\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimesdk\/filelistitem\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/filelistitem","title":"FileListItem","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/distances-swift.struct\/init(activity:distance:)","title":"init(activity: String, distance: Double)","type":"init"},{"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/distances-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/distances-swift.struct\/activity","title":"var activity: String","type":"property"},{"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/distances-swift.struct\/distance","title":"var distance: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/distances-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/distances-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/distances-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/distances-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/distances-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/distances-swift.struct","title":"FitnessActivitySummary.Distances","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/init(identifier:entityid:accountentityid:steps:distances:calories:activity:createddate:startdate:enddate:)","title":"init(identifier: String?, entityId: String?, accountEntityId: String?, steps: Double, distances: [Distances], calories: Double, activity: Int, createdDate: Date?, startDate: Date, endDate: Date)","type":"init"},{"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/init(startdate:enddate:steps:distances:calories:activity:account:)","title":"init(startDate: Date, endDate: Date, steps: Double, distances: [Distances], calories: Double, activity: Int, account: SourceAccount?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/accountentityid","title":"var accountEntityId: String?","type":"property"},{"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/activity","title":"var activity: Int","type":"property"},{"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/calories","title":"var calories: Double","type":"property"},{"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/createddate","title":"var createdDate: Date?","type":"property"},{"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/distances-swift.property","title":"var distances: [Distances]","type":"property"},{"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/enddate","title":"var endDate: Date","type":"property"},{"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/entityid","title":"var entityId: String?","type":"property"},{"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/id-7n7ua","title":"var id: String","type":"property"},{"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/startdate","title":"var startDate: Date","type":"property"},{"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/steps","title":"var steps: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/id-8v6uq","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/digimesdk\/fitnessactivitysummary\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/fitnessactivitysummary","title":"FitnessActivitySummary","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/gdpr\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/gdpr\/canrequestrighttobeforgotten","title":"let canRequestRightToBeForgotten: Bool?","type":"property"},{"path":"\/documentation\/digimesdk\/gdpr\/description","title":"let description: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/gdpr\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/gdpr\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/gdpr\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/gdpr\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/gdpr\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/gdpr","title":"GDPR","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/healthdataoperationresult\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/healthdataoperationresult\/account","title":"var account: SourceAccount","type":"property"},{"path":"\/documentation\/digimesdk\/healthdataoperationresult\/data","title":"var data: [String : [FitnessActivitySummary]]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/healthdataoperationresult\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/healthdataoperationresult\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/healthdataoperationresult\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/healthdataoperationresult\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/healthdataoperationresult\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/healthdataoperationresult","title":"HealthDataOperationResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/healthkitconfiguration\/init(typestoread:typestowrite:startdate:enddate:anchordate:mergeresultforsametype:singlecallbackforalltypes:intervalcomponents:)","title":"init(typesToRead: [ObjectType], typesToWrite: [QuantityType], startDate: Date, endDate: Date, anchorDate: Date?, mergeResultForSameType: Bool, singleCallbackForAllTypes: Bool, intervalComponents: DateComponents?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/healthkitconfiguration\/anchordate","title":"let anchorDate: Date?","type":"property"},{"path":"\/documentation\/digimesdk\/healthkitconfiguration\/enddate","title":"let endDate: Date","type":"property"},{"path":"\/documentation\/digimesdk\/healthkitconfiguration\/intervalcomponents","title":"let intervalComponents: DateComponents?","type":"property"},{"path":"\/documentation\/digimesdk\/healthkitconfiguration\/mergeresultforsametype","title":"let mergeResultForSameType: Bool","type":"property"},{"path":"\/documentation\/digimesdk\/healthkitconfiguration\/singlecallbackforalltypes","title":"let singleCallbackForAllTypes: Bool","type":"property"},{"path":"\/documentation\/digimesdk\/healthkitconfiguration\/startdate","title":"let startDate: Date","type":"property"},{"path":"\/documentation\/digimesdk\/healthkitconfiguration\/typestoread","title":"let typesToRead: [ObjectType]","type":"property"},{"path":"\/documentation\/digimesdk\/healthkitconfiguration\/typestowrite","title":"let typesToWrite: [QuantityType]","type":"property"}],"path":"\/documentation\/digimesdk\/healthkitconfiguration","title":"HealthKitConfiguration","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/harmonized-swift.struct\/init(count:measurements:metadata:)","title":"init(count: Int, measurements: [Measurement], metadata: Metadata?)","type":"init"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/harmonized-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/harmonized-swift.struct\/count","title":"let count: Int","type":"property"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/harmonized-swift.struct\/measurements","title":"let measurements: [Measurement]","type":"property"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/harmonized-swift.struct\/metadata","title":"let metadata: Metadata?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/harmonized-swift.struct\/copywith(count:measurements:metadata:)","title":"func copyWith(count: Int?, measurements: [Measurement]?, metadata: Metadata?) -> Harmonized","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/harmonized-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/harmonized-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/harmonized-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/harmonized-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/heartbeatseries\/harmonized-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/harmonized-swift.struct\/make(from:)","title":"static func make(from: [String : Any]) throws -> HeartbeatSeries.Harmonized","type":"method"}],"path":"\/documentation\/digimesdk\/heartbeatseries\/harmonized-swift.struct\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/heartbeatseries\/harmonized-swift.struct","title":"HeartbeatSeries.Harmonized","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/measurement\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/measurement\/init(timesinceseriesstart:precededbygap:done:)","title":"init(timeSinceSeriesStart: Double, precededByGap: Bool, done: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/measurement\/done","title":"let done: Bool","type":"property"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/measurement\/precededbygap","title":"let precededByGap: Bool","type":"property"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/measurement\/timesinceseriesstart","title":"let timeSinceSeriesStart: Double","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/measurement\/collect(from:)","title":"static func collect(from: [Any]) throws -> [HeartbeatSeries.Measurement]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/measurement\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/measurement\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/measurement\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/measurement\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/heartbeatseries\/measurement\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/measurement\/make(from:)","title":"static func make(from: [String : Any]) throws -> HeartbeatSeries.Measurement","type":"method"}],"path":"\/documentation\/digimesdk\/heartbeatseries\/measurement\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/heartbeatseries\/measurement","title":"HeartbeatSeries.Measurement","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/init(identifier:starttimestamp:endtimestamp:device:sourcerevision:harmonized:)","title":"init(identifier: String, startTimestamp: Double, endTimestamp: Double, device: Device?, sourceRevision: SourceRevision, harmonized: Harmonized)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/device","title":"let device: Device?","type":"property"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/endtimestamp","title":"let endTimestamp: Double","type":"property"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/harmonized-swift.property","title":"let harmonized: Harmonized","type":"property"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/sourcerevision","title":"let sourceRevision: SourceRevision","type":"property"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/starttimestamp","title":"let startTimestamp: Double","type":"property"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/uuid","title":"let uuid: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/heartbeatseries\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/heartbeatseries\/make(from:)","title":"static func make(from: [String : Any]) throws -> HeartbeatSeries","type":"method"}],"path":"\/documentation\/digimesdk\/heartbeatseries\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/heartbeatseries","title":"HeartbeatSeries","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/limits\/init(duration:)","title":"init(duration: Duration)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/limits\/duration","title":"let duration: Duration","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/limits\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/limits\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/limits\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/limits\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/limits\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/limits","title":"Limits","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/mappedfilemetadata\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/mappedfilemetadata\/objectcount","title":"let objectCount: Int","type":"property"},{"path":"\/documentation\/digimesdk\/mappedfilemetadata\/objecttype","title":"let objectType: String","type":"property"},{"path":"\/documentation\/digimesdk\/mappedfilemetadata\/servicegroup","title":"let serviceGroup: String","type":"property"},{"path":"\/documentation\/digimesdk\/mappedfilemetadata\/servicename","title":"let serviceName: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/mappedfilemetadata\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/mappedfilemetadata\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/mappedfilemetadata\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/mappedfilemetadata\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/mappedfilemetadata\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/mappedfilemetadata","title":"MappedFileMetadata","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/oauth\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/oauth\/deliverymode","title":"let deliveryMode: DeliveryMode?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/oauth\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/oauth\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/oauth\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/oauth\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/oauth\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/oauth","title":"OAuth","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/partner\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/partner\/environment","title":"let environment: Int?","type":"property"},{"path":"\/documentation\/digimesdk\/partner\/id","title":"let id: String?","type":"property"},{"path":"\/documentation\/digimesdk\/partner\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/digimesdk\/partner\/resources","title":"let resources: Resources?","type":"property"},{"path":"\/documentation\/digimesdk\/partner\/revision","title":"let revision: Int?","type":"property"},{"path":"\/documentation\/digimesdk\/partner\/schemaversion","title":"let schemaVersion: String?","type":"property"},{"path":"\/documentation\/digimesdk\/partner\/visibility","title":"let visibility: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/partner\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/partner\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/partner\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/partner\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/partner\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/partner","title":"Partner","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/policies\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/policies\/currentstate","title":"let currentState: [String : String]?","type":"property"},{"path":"\/documentation\/digimesdk\/policies\/properties","title":"let properties: [String : String]?","type":"property"},{"path":"\/documentation\/digimesdk\/policies\/scope","title":"let scope: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/policies\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/policies\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/policies\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/policies\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/policies\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/policies","title":"Policies","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/preferredunit\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimesdk\/preferredunit\/init(identifier:unit:)","title":"init(identifier: String, unit: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/preferredunit\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/digimesdk\/preferredunit\/unit","title":"let unit: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/preferredunit\/collect(from:)-2hvkw","title":"static func collect(from: [HKQuantityType : HKUnit]) -> [PreferredUnit]","type":"method"},{"path":"\/documentation\/digimesdk\/preferredunit\/collect(from:)-7jqwu","title":"static func collect(from: [QuantityType : String]) -> [PreferredUnit]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/preferredunit\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/preferredunit\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/preferredunit\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/preferredunit\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/preferredunit\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/preferredunit\/make(from:)","title":"static func make(from: [String : Any]) throws -> PreferredUnit","type":"method"}],"path":"\/documentation\/digimesdk\/preferredunit\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/preferredunit","title":"PreferredUnit","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/quantity\/harmonized-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimesdk\/quantity\/harmonized-swift.struct\/init(value:unit:metadata:)","title":"init(value: Double, unit: String, metadata: Metadata?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/quantity\/harmonized-swift.struct\/metadata","title":"let metadata: Metadata?","type":"property"},{"path":"\/documentation\/digimesdk\/quantity\/harmonized-swift.struct\/unit","title":"let unit: String","type":"property"},{"path":"\/documentation\/digimesdk\/quantity\/harmonized-swift.struct\/value","title":"let value: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/quantity\/harmonized-swift.struct\/copywith(value:unit:metadata:)","title":"func copyWith(value: Double?, unit: String?, metadata: Metadata?) -> Harmonized","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/quantity\/harmonized-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/quantity\/harmonized-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/quantity\/harmonized-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/quantity\/harmonized-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/quantity\/harmonized-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/quantity\/harmonized-swift.struct\/make(from:)","title":"static func make(from: [String : Any]) throws -> Quantity.Harmonized","type":"method"}],"path":"\/documentation\/digimesdk\/quantity\/harmonized-swift.struct\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/quantity\/harmonized-swift.struct","title":"Quantity.Harmonized","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/quantity\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimesdk\/quantity\/init(identifier:starttimestamp:endtimestamp:device:sourcerevision:harmonized:)","title":"init(identifier: String, startTimestamp: Double, endTimestamp: Double, device: Device?, sourceRevision: SourceRevision, harmonized: Harmonized)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/quantity\/device","title":"let device: Device?","type":"property"},{"path":"\/documentation\/digimesdk\/quantity\/endtimestamp","title":"let endTimestamp: Double","type":"property"},{"path":"\/documentation\/digimesdk\/quantity\/harmonized-swift.property","title":"let harmonized: Harmonized","type":"property"},{"path":"\/documentation\/digimesdk\/quantity\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/digimesdk\/quantity\/sourcerevision","title":"let sourceRevision: SourceRevision","type":"property"},{"path":"\/documentation\/digimesdk\/quantity\/starttimestamp","title":"let startTimestamp: Double","type":"property"},{"path":"\/documentation\/digimesdk\/quantity\/uuid","title":"let uuid: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/quantity\/copywith(identifier:starttimestamp:endtimestamp:device:sourcerevision:harmonized:)","title":"func copyWith(identifier: String?, startTimestamp: Double?, endTimestamp: Double?, device: Device?, sourceRevision: SourceRevision?, harmonized: Harmonized?) -> Quantity","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/quantity\/collect(from:)","title":"static func collect(from: [Any]) throws -> [Quantity]","type":"method"},{"path":"\/documentation\/digimesdk\/quantity\/collect(results:unit:)","title":"static func collect(results: [HKSample], unit: HKUnit) -> [Quantity]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/quantity\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/quantity\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/quantity\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/quantity\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/quantity\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/quantity\/make(from:)","title":"static func make(from: [String : Any]) throws -> Quantity","type":"method"}],"path":"\/documentation\/digimesdk\/quantity\/payload-implementations","title":"Payload Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/quantity\/converted(to:)","title":"func converted(to: String) throws -> Quantity","type":"method"}],"path":"\/documentation\/digimesdk\/quantity\/unitconvertable-implementations","title":"UnitConvertable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/quantity","title":"Quantity","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/account\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/account\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/account\/accountid","title":"let accountId: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/account\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/account\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/account\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/account\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/rawfilemetadata\/account\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/account\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/digimesdk\/rawfilemetadata\/account\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/account\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/digimesdk\/rawfilemetadata\/account\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/rawfilemetadata\/account","title":"RawFileMetadata.Account","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/objecttype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/objecttype\/init(name:references:)","title":"init(name: String, references: [String]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/objecttype\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/objecttype\/references","title":"let references: [String]?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/objecttype\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/objecttype\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/objecttype\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/objecttype\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/rawfilemetadata\/objecttype\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/rawfilemetadata\/objecttype","title":"RawFileMetadata.ObjectType","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/init(builder:)","title":"init(builder: RawFileMetadataBuilder)","type":"init"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/accounts","title":"let accounts: [Account]","type":"property"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/appid","title":"let appId: String?","type":"property"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/contractid","title":"let contractId: String?","type":"property"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/created","title":"let created: Double?","type":"property"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/mimetype","title":"let mimeType: MimeType","type":"property"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/objecttypes","title":"let objectTypes: [ObjectType]?","type":"property"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/partnerid","title":"let partnerId: String?","type":"property"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/reference","title":"let reference: [String]?","type":"property"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/servicegroups","title":"let serviceGroups: [Int]?","type":"property"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/tags","title":"let tags: [String]?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/rawfilemetadata\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/rawfilemetadata\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/rawfilemetadata","title":"RawFileMetadata","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/readoptions\/init(limits:scope:)","title":"init?(limits: Limits?, scope: Scope?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/readoptions\/limits","title":"let limits: Limits?","type":"property"},{"path":"\/documentation\/digimesdk\/readoptions\/scope","title":"let scope: Scope?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/readoptions\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/readoptions\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/readoptions\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/readoptions\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/readoptions\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/readoptions","title":"ReadOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/resources\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/resources\/homepage","title":"let homePage: String?","type":"property"},{"path":"\/documentation\/digimesdk\/resources\/logo","title":"let logo: String?","type":"property"},{"path":"\/documentation\/digimesdk\/resources\/privacypolicy","title":"let privacyPolicy: String?","type":"property"},{"path":"\/documentation\/digimesdk\/resources\/terms","title":"let terms: String?","type":"property"},{"path":"\/documentation\/digimesdk\/resources\/termsandconditions","title":"let termsAndConditions: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/resources\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/resources\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/resources\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/resources\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/resources\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/resources","title":"Resources","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/scope\/init(servicegroups:timeranges:)","title":"init(serviceGroups: [ServiceGroupScope], timeRanges: [TimeRange]?)","type":"init"},{"path":"\/documentation\/digimesdk\/scope\/init(timeranges:)","title":"init(timeRanges: [TimeRange])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/scope\/servicegroups","title":"let serviceGroups: [ServiceGroupScope]?","type":"property"},{"path":"\/documentation\/digimesdk\/scope\/timeranges","title":"let timeRanges: [TimeRange]?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/scope\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/scope\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/scope\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/scope\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/scope\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/scope","title":"Scope","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/service\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/service\/countryids","title":"var countryIds: [Int]","type":"property"},{"path":"\/documentation\/digimesdk\/service\/id-7r3m7","title":"let id: UUID","type":"property"},{"path":"\/documentation\/digimesdk\/service\/identifier","title":"let identifier: Int","type":"property"},{"path":"\/documentation\/digimesdk\/service\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/digimesdk\/service\/options","title":"var options: ReadOptions?","type":"property"},{"path":"\/documentation\/digimesdk\/service\/resources","title":"var resources: [DiscoveryResource]","type":"property"},{"path":"\/documentation\/digimesdk\/service\/servicegroupids","title":"var serviceGroupIds: [Int]","type":"property"},{"path":"\/documentation\/digimesdk\/service\/serviceidentifier","title":"let serviceIdentifier: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/service\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/service\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/service\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/service\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/service\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/service\/id-8qlnp","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/digimesdk\/service\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/service","title":"Service","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/servicecountry\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/servicecountry\/code","title":"let code: String","type":"property"},{"path":"\/documentation\/digimesdk\/servicecountry\/identifier","title":"let identifier: Int","type":"property"},{"path":"\/documentation\/digimesdk\/servicecountry\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/servicecountry\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/servicecountry\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/servicecountry\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/servicecountry\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/servicecountry\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/servicecountry","title":"ServiceCountry","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/serviceerror\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/serviceerror\/message","title":"let message: String","type":"property"},{"path":"\/documentation\/digimesdk\/serviceerror\/retryafter","title":"let retryAfter: Date?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/serviceerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimesdk\/serviceerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/serviceerror","title":"ServiceError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/servicegroup\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/servicegroup\/identifier","title":"let identifier: Int","type":"property"},{"path":"\/documentation\/digimesdk\/servicegroup\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/servicegroup\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/servicegroup\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/servicegroup\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/servicegroup\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/servicegroup\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/servicegroup","title":"ServiceGroup","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/servicegroupcodable\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/servicegroupcodable\/id","title":"let id: Int?","type":"property"},{"path":"\/documentation\/digimesdk\/servicegroupcodable\/servicetypes","title":"let serviceTypes: [ServiceTypeCodable]?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/servicegroupcodable\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/servicegroupcodable\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/servicegroupcodable\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/servicegroupcodable\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/servicegroupcodable\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/servicegroupcodable","title":"ServiceGroupCodable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/servicegroupscope\/init(identifier:servicetypes:)","title":"init(identifier: UInt, serviceTypes: [ServiceType])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/servicegroupscope\/identifier","title":"let identifier: UInt","type":"property"},{"path":"\/documentation\/digimesdk\/servicegroupscope\/servicetypes","title":"let serviceTypes: [ServiceType]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/servicegroupscope\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/servicegroupscope\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/servicegroupscope\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/servicegroupscope\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/servicegroupscope\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/servicegroupscope","title":"ServiceGroupScope","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/serviceobjecttype\/init(identifier:name:)","title":"init(identifier: UInt, name: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/serviceobjecttype\/identifier","title":"let identifier: UInt","type":"property"},{"path":"\/documentation\/digimesdk\/serviceobjecttype\/name","title":"let name: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/serviceobjecttype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/serviceobjecttype\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/serviceobjecttype\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/serviceobjecttype\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/serviceobjecttype\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/serviceobjecttype\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/serviceobjecttype","title":"ServiceObjectType","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/serviceobjecttypecodable\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/serviceobjecttypecodable\/id","title":"let id: Int?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/serviceobjecttypecodable\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/serviceobjecttypecodable\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/serviceobjecttypecodable\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/serviceobjecttypecodable\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/serviceobjecttypecodable\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/serviceobjecttypecodable","title":"ServiceObjectTypeCodable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/servicetype\/init(identifier:objecttypes:)","title":"init(identifier: UInt, objectTypes: [ServiceObjectType])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/servicetype\/identifier","title":"let identifier: UInt","type":"property"},{"path":"\/documentation\/digimesdk\/servicetype\/serviceobjecttypes","title":"let serviceObjectTypes: [ServiceObjectType]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/servicetype\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/servicetype\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/servicetype\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/servicetype\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/servicetype\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/servicetype","title":"ServiceType","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/servicetypecodable\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/servicetypecodable\/id","title":"let id: Int?","type":"property"},{"path":"\/documentation\/digimesdk\/servicetypecodable\/serviceobjecttypes","title":"let serviceObjectTypes: [ServiceObjectTypeCodable]?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/servicetypecodable\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/servicetypecodable\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/servicetypecodable\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/servicetypecodable\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/servicetypecodable\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/servicetypecodable","title":"ServiceTypeCodable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/servicesinfo\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/servicesinfo\/countries","title":"let countries: [ServiceCountry]","type":"property"},{"path":"\/documentation\/digimesdk\/servicesinfo\/servicegroups","title":"let serviceGroups: [ServiceGroup]","type":"property"},{"path":"\/documentation\/digimesdk\/servicesinfo\/services","title":"let services: [Service]","type":"property"}],"path":"\/documentation\/digimesdk\/servicesinfo","title":"ServicesInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/source\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimesdk\/source\/init(name:bundleidentifier:)","title":"init(name: String, bundleIdentifier: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/source\/bundleidentifier","title":"let bundleIdentifier: String","type":"property"},{"path":"\/documentation\/digimesdk\/source\/name","title":"let name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/source\/copywith(name:bundleidentifier:)","title":"func copyWith(name: String?, bundleIdentifier: String?) -> Source","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/source\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/source\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/source\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/source\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/source\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/source\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimesdk\/source\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/source\/make(from:)","title":"static func make(from: [String : Any]) throws -> Source","type":"method"}],"path":"\/documentation\/digimesdk\/source\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/source","title":"Source","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/sourceaccount\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimesdk\/sourceaccount\/init(identifier:name:service:number:)","title":"init(identifier: String, name: String, service: AccountServiceDescriptor, number: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/sourceaccount\/id-6u7lv","title":"let id: UUID","type":"property"},{"path":"\/documentation\/digimesdk\/sourceaccount\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/digimesdk\/sourceaccount\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/digimesdk\/sourceaccount\/number","title":"let number: String?","type":"property"},{"path":"\/documentation\/digimesdk\/sourceaccount\/service","title":"let service: AccountServiceDescriptor","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/sourceaccount\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/sourceaccount\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/sourceaccount\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/sourceaccount\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/sourceaccount\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/sourceaccount\/id-8ue2b","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/digimesdk\/sourceaccount\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/sourceaccount","title":"SourceAccount","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/sourcerevision\/operatingsystem-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimesdk\/sourcerevision\/operatingsystem-swift.struct\/init(majorversion:minorversion:patchversion:)","title":"init(majorVersion: Int, minorVersion: Int, patchVersion: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/sourcerevision\/operatingsystem-swift.struct\/majorversion","title":"let majorVersion: Int","type":"property"},{"path":"\/documentation\/digimesdk\/sourcerevision\/operatingsystem-swift.struct\/minorversion","title":"let minorVersion: Int","type":"property"},{"path":"\/documentation\/digimesdk\/sourcerevision\/operatingsystem-swift.struct\/patchversion","title":"let patchVersion: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/sourcerevision\/operatingsystem-swift.struct\/copywith(majorversion:minorversion:patchversion:)","title":"func copyWith(majorVersion: Int?, minorVersion: Int?, patchVersion: Int?) -> OperatingSystem","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/sourcerevision\/operatingsystem-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/sourcerevision\/operatingsystem-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/sourcerevision\/operatingsystem-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/sourcerevision\/operatingsystem-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/sourcerevision\/operatingsystem-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/sourcerevision\/operatingsystem-swift.struct\/make(from:)","title":"static func make(from: [String : Any]) throws -> SourceRevision.OperatingSystem","type":"method"}],"path":"\/documentation\/digimesdk\/sourcerevision\/operatingsystem-swift.struct\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/sourcerevision\/operatingsystem-swift.struct","title":"SourceRevision.OperatingSystem","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/sourcerevision\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimesdk\/sourcerevision\/init(source:version:producttype:systemversion:operatingsystem:)","title":"init(source: Source, version: String?, productType: String?, systemVersion: String, operatingSystem: OperatingSystem)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/sourcerevision\/operatingsystem-swift.property","title":"let operatingSystem: OperatingSystem","type":"property"},{"path":"\/documentation\/digimesdk\/sourcerevision\/producttype","title":"let productType: String?","type":"property"},{"path":"\/documentation\/digimesdk\/sourcerevision\/source","title":"let source: Source","type":"property"},{"path":"\/documentation\/digimesdk\/sourcerevision\/systemversion","title":"let systemVersion: String","type":"property"},{"path":"\/documentation\/digimesdk\/sourcerevision\/version","title":"let version: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/sourcerevision\/copywith(source:version:producttype:systemversion:operatingsystem:)","title":"func copyWith(source: Source?, version: String?, productType: String?, systemVersion: String?, operatingSystem: OperatingSystem?) -> SourceRevision","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/sourcerevision\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/sourcerevision\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/sourcerevision\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/sourcerevision\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/sourcerevision\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/sourcerevision\/make(from:)","title":"static func make(from: [String : Any]) throws -> SourceRevision","type":"method"}],"path":"\/documentation\/digimesdk\/sourcerevision\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/sourcerevision","title":"SourceRevision","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/statistics\/harmonized-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimesdk\/statistics\/harmonized-swift.struct\/init(summary:average:recent:min:max:unit:)","title":"init(summary: Double?, average: Double?, recent: Double?, min: Double?, max: Double?, unit: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/statistics\/harmonized-swift.struct\/average","title":"var average: Double?","type":"property"},{"path":"\/documentation\/digimesdk\/statistics\/harmonized-swift.struct\/max","title":"var max: Double?","type":"property"},{"path":"\/documentation\/digimesdk\/statistics\/harmonized-swift.struct\/min","title":"var min: Double?","type":"property"},{"path":"\/documentation\/digimesdk\/statistics\/harmonized-swift.struct\/recent","title":"var recent: Double?","type":"property"},{"path":"\/documentation\/digimesdk\/statistics\/harmonized-swift.struct\/summary","title":"var summary: Double?","type":"property"},{"path":"\/documentation\/digimesdk\/statistics\/harmonized-swift.struct\/unit","title":"let unit: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/statistics\/harmonized-swift.struct\/copywith(summary:average:recent:min:max:unit:)","title":"func copyWith(summary: Double?, average: Double?, recent: Double?, min: Double?, max: Double?, unit: String?) -> Harmonized","type":"method"},{"path":"\/documentation\/digimesdk\/statistics\/harmonized-swift.struct\/mergevalues(of:with:)","title":"func mergeValues(of: Harmonized, with: Harmonized) throws -> Harmonized","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/statistics\/harmonized-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/statistics\/harmonized-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/statistics\/harmonized-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/statistics\/harmonized-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/statistics\/harmonized-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/statistics\/harmonized-swift.struct","title":"Statistics.Harmonized","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/statistics\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/statistics\/endtimestamp","title":"let endTimestamp: Double","type":"property"},{"path":"\/documentation\/digimesdk\/statistics\/harmonized-swift.property","title":"var harmonized: Harmonized","type":"property"},{"path":"\/documentation\/digimesdk\/statistics\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/digimesdk\/statistics\/sources","title":"var sources: [Source]","type":"property"},{"path":"\/documentation\/digimesdk\/statistics\/starttimestamp","title":"let startTimestamp: Double","type":"property"},{"path":"\/documentation\/digimesdk\/statistics\/uid","title":"var uid: UUID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/statistics\/copywith(identifier:starttimestamp:endtimestamp:harmonized:sources:)","title":"func copyWith(identifier: String?, startTimestamp: Double?, endTimestamp: Double?, harmonized: Harmonized?, sources: [Source]?) -> Statistics","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/statistics\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/statistics\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/statistics\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/statistics\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/statistics\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/statistics\/converted(to:)","title":"func converted(to: String) throws -> Statistics","type":"method"}],"path":"\/documentation\/digimesdk\/statistics\/unitconvertable-implementations","title":"UnitConvertable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/statistics","title":"Statistics","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/syncaccount\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/syncaccount\/error","title":"let error: SyncError?","type":"property"},{"path":"\/documentation\/digimesdk\/syncaccount\/identifier","title":"let identifier: String?","type":"property"},{"path":"\/documentation\/digimesdk\/syncaccount\/state","title":"let state: SyncState","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/syncaccount\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimesdk\/syncaccount\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/syncaccount","title":"SyncAccount","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/syncerror\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/syncerror\/code","title":"let code: String","type":"property"},{"path":"\/documentation\/digimesdk\/syncerror\/error","title":"let error: ServiceError?","type":"property"},{"path":"\/documentation\/digimesdk\/syncerror\/statuscode","title":"let statusCode: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/syncerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimesdk\/syncerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/syncerror","title":"SyncError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/syncstatus\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/syncstatus\/details","title":"let details: [SyncAccount]?","type":"property"},{"path":"\/documentation\/digimesdk\/syncstatus\/state","title":"let state: SyncState","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/syncstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimesdk\/syncstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/syncstatus","title":"SyncStatus","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/timerangecodable\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/timerangecodable\/from","title":"let from: Double?","type":"property"},{"path":"\/documentation\/digimesdk\/timerangecodable\/last","title":"let last: String?","type":"property"},{"path":"\/documentation\/digimesdk\/timerangecodable\/to","title":"let to: Double?","type":"property"},{"path":"\/documentation\/digimesdk\/timerangecodable\/type","title":"let type: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/timerangecodable\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/timerangecodable\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/timerangecodable\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/timerangecodable\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/timerangecodable\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/timerangecodable","title":"TimeRangeCodable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/timerangelimits\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/timerangelimits\/enddate","title":"let endDate: Date","type":"property"},{"path":"\/documentation\/digimesdk\/timerangelimits\/startdate","title":"let startDate: Date","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/timerangelimits\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/timerangelimits\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/timerangelimits\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/timerangelimits\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/timerangelimits\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/timerangelimits","title":"TimeRangeLimits","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/userdefault\/init(key:defaultvalue:userdefaults:persistdefaultvalue:)","title":"init<U>(key: U, defaultValue: T, userDefaults: UserDefaults, persistDefaultValue: Bool)","type":"init"},{"path":"\/documentation\/digimesdk\/userdefault\/init(key:userdefaults:)-1dpaj","title":"init<U>(key: U, userDefaults: UserDefaults)","type":"init"},{"path":"\/documentation\/digimesdk\/userdefault\/init(key:userdefaults:)-5osyi","title":"init(key: String, userDefaults: UserDefaults)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/userdefault\/wrappedvalue","title":"var wrappedValue: T","type":"property"}],"path":"\/documentation\/digimesdk\/userdefault","title":"UserDefault","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/visionprescription\/harmonized-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/visionprescription\/harmonized-swift.struct\/dateissuedtimestamp","title":"let dateIssuedTimestamp: Double","type":"property"},{"path":"\/documentation\/digimesdk\/visionprescription\/harmonized-swift.struct\/expirationdatetimestamp","title":"let expirationDateTimestamp: Double?","type":"property"},{"path":"\/documentation\/digimesdk\/visionprescription\/harmonized-swift.struct\/metadata","title":"let metadata: Metadata?","type":"property"},{"path":"\/documentation\/digimesdk\/visionprescription\/harmonized-swift.struct\/prescriptiontype","title":"let prescriptionType: PrescriptionType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/visionprescription\/harmonized-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/visionprescription\/harmonized-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/visionprescription\/harmonized-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/visionprescription\/harmonized-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/visionprescription\/harmonized-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/visionprescription\/harmonized-swift.struct\/make(from:)","title":"static func make(from: [String : Any]) throws -> VisionPrescription.Harmonized","type":"method"}],"path":"\/documentation\/digimesdk\/visionprescription\/harmonized-swift.struct\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/visionprescription\/harmonized-swift.struct","title":"VisionPrescription.Harmonized","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/visionprescription\/prescriptiontype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/visionprescription\/prescriptiontype\/detail","title":"let detail: String","type":"property"},{"path":"\/documentation\/digimesdk\/visionprescription\/prescriptiontype\/id","title":"let id: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/visionprescription\/prescriptiontype\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/visionprescription\/prescriptiontype\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/visionprescription\/prescriptiontype\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/visionprescription\/prescriptiontype\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/visionprescription\/prescriptiontype\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/visionprescription\/prescriptiontype\/make(from:)","title":"static func make(from: [String : Any]) throws -> VisionPrescription.PrescriptionType","type":"method"}],"path":"\/documentation\/digimesdk\/visionprescription\/prescriptiontype\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/visionprescription\/prescriptiontype","title":"VisionPrescription.PrescriptionType","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/visionprescription\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/visionprescription\/device","title":"let device: Device?","type":"property"},{"path":"\/documentation\/digimesdk\/visionprescription\/endtimestamp","title":"let endTimestamp: Double","type":"property"},{"path":"\/documentation\/digimesdk\/visionprescription\/harmonized-swift.property","title":"let harmonized: Harmonized","type":"property"},{"path":"\/documentation\/digimesdk\/visionprescription\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/digimesdk\/visionprescription\/sourcerevision","title":"let sourceRevision: SourceRevision","type":"property"},{"path":"\/documentation\/digimesdk\/visionprescription\/starttimestamp","title":"let startTimestamp: Double","type":"property"},{"path":"\/documentation\/digimesdk\/visionprescription\/uuid","title":"let uuid: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/visionprescription\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/visionprescription\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/visionprescription\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/visionprescription\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/visionprescription\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/visionprescription\/make(from:)","title":"static func make(from: [String : Any]) throws -> VisionPrescription","type":"method"}],"path":"\/documentation\/digimesdk\/visionprescription\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/visionprescription","title":"VisionPrescription","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workout\/harmonized-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimesdk\/workout\/harmonized-swift.struct\/init(value:description:totalenergyburned:totalenergyburnedunit:totaldistance:totaldistanceunit:totalswimmingstrokecount:totalswimmingstrokecountunit:totalflightsclimbed:totalflightsclimbedunit:metadata:)","title":"init(value: Int, description: String, totalEnergyBurned: Double?, totalEnergyBurnedUnit: String, totalDistance: Double?, totalDistanceUnit: String, totalSwimmingStrokeCount: Double?, totalSwimmingStrokeCountUnit: String, totalFlightsClimbed: Double?, totalFlightsClimbedUnit: String, metadata: Metadata?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workout\/harmonized-swift.struct\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/digimesdk\/workout\/harmonized-swift.struct\/metadata","title":"let metadata: Metadata?","type":"property"},{"path":"\/documentation\/digimesdk\/workout\/harmonized-swift.struct\/totaldistance","title":"let totalDistance: Double?","type":"property"},{"path":"\/documentation\/digimesdk\/workout\/harmonized-swift.struct\/totaldistanceunit","title":"let totalDistanceUnit: String","type":"property"},{"path":"\/documentation\/digimesdk\/workout\/harmonized-swift.struct\/totalenergyburned","title":"let totalEnergyBurned: Double?","type":"property"},{"path":"\/documentation\/digimesdk\/workout\/harmonized-swift.struct\/totalenergyburnedunit","title":"let totalEnergyBurnedUnit: String","type":"property"},{"path":"\/documentation\/digimesdk\/workout\/harmonized-swift.struct\/totalflightsclimbed","title":"let totalFlightsClimbed: Double?","type":"property"},{"path":"\/documentation\/digimesdk\/workout\/harmonized-swift.struct\/totalflightsclimbedunit","title":"let totalFlightsClimbedUnit: String","type":"property"},{"path":"\/documentation\/digimesdk\/workout\/harmonized-swift.struct\/totalswimmingstrokecount","title":"let totalSwimmingStrokeCount: Double?","type":"property"},{"path":"\/documentation\/digimesdk\/workout\/harmonized-swift.struct\/totalswimmingstrokecountunit","title":"let totalSwimmingStrokeCountUnit: String","type":"property"},{"path":"\/documentation\/digimesdk\/workout\/harmonized-swift.struct\/value","title":"let value: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workout\/harmonized-swift.struct\/copywith(value:description:totalenergyburned:totalenergyburnedunit:totaldistance:totaldistanceunit:totalswimmingstrokecount:totalswimmingstrokecountunit:totalflightsclimbed:totalflightsclimbedunit:metadata:)","title":"func copyWith(value: Int?, description: String?, totalEnergyBurned: Double?, totalEnergyBurnedUnit: String?, totalDistance: Double?, totalDistanceUnit: String?, totalSwimmingStrokeCount: Double?, totalSwimmingStrokeCountUnit: String?, totalFlightsClimbed: Double?, totalFlightsClimbedUnit: String?, metadata: Metadata?) -> Harmonized","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workout\/harmonized-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/workout\/harmonized-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workout\/harmonized-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/workout\/harmonized-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/workout\/harmonized-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workout\/harmonized-swift.struct\/make(from:)","title":"static func make(from: [String : Any]) throws -> Workout.Harmonized","type":"method"}],"path":"\/documentation\/digimesdk\/workout\/harmonized-swift.struct\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/workout\/harmonized-swift.struct","title":"Workout.Harmonized","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workout\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimesdk\/workout\/init(identifier:starttimestamp:endtimestamp:device:sourcerevision:duration:workoutevents:harmonized:)","title":"init(identifier: String, startTimestamp: Double, endTimestamp: Double, device: Device?, sourceRevision: SourceRevision, duration: Double, workoutEvents: [WorkoutEvent], harmonized: Harmonized)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workout\/device","title":"let device: Device?","type":"property"},{"path":"\/documentation\/digimesdk\/workout\/duration","title":"let duration: Double","type":"property"},{"path":"\/documentation\/digimesdk\/workout\/endtimestamp","title":"let endTimestamp: Double","type":"property"},{"path":"\/documentation\/digimesdk\/workout\/harmonized-swift.property","title":"let harmonized: Harmonized","type":"property"},{"path":"\/documentation\/digimesdk\/workout\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/digimesdk\/workout\/sourcerevision","title":"let sourceRevision: SourceRevision","type":"property"},{"path":"\/documentation\/digimesdk\/workout\/starttimestamp","title":"let startTimestamp: Double","type":"property"},{"path":"\/documentation\/digimesdk\/workout\/uuid","title":"let uuid: String","type":"property"},{"path":"\/documentation\/digimesdk\/workout\/workoutevents","title":"let workoutEvents: [WorkoutEvent]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workout\/copywith(identifier:starttimestamp:endtimestamp:device:sourcerevision:duration:workoutevents:harmonized:)","title":"func copyWith(identifier: String?, startTimestamp: Double?, endTimestamp: Double?, device: Device?, sourceRevision: SourceRevision?, duration: Double?, workoutEvents: [WorkoutEvent]?, harmonized: Harmonized?) -> Workout","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workout\/collect(results:)","title":"static func collect(results: [HKSample]) -> [Workout]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workout\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/workout\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workout\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/workout\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/workout\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workout\/make(from:)","title":"static func make(from: [String : Any]) throws -> Workout","type":"method"}],"path":"\/documentation\/digimesdk\/workout\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/workout","title":"Workout","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutconfiguration\/harmonized-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimesdk\/workoutconfiguration\/harmonized-swift.struct\/init(value:unit:)","title":"init(value: Double, unit: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutconfiguration\/harmonized-swift.struct\/unit","title":"let unit: String","type":"property"},{"path":"\/documentation\/digimesdk\/workoutconfiguration\/harmonized-swift.struct\/value","title":"let value: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutconfiguration\/harmonized-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/workoutconfiguration\/harmonized-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutconfiguration\/harmonized-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/workoutconfiguration\/harmonized-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/workoutconfiguration\/harmonized-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutconfiguration\/harmonized-swift.struct\/make(from:)","title":"static func make(from: [String : Any]) throws -> WorkoutConfiguration.Harmonized","type":"method"}],"path":"\/documentation\/digimesdk\/workoutconfiguration\/harmonized-swift.struct\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/workoutconfiguration\/harmonized-swift.struct","title":"WorkoutConfiguration.Harmonized","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutconfiguration\/init(activityvalue:locationvalue:swimmingvalue:harmonized:)","title":"init(activityValue: Int, locationValue: Int, swimmingValue: Int, harmonized: Harmonized)","type":"init"},{"path":"\/documentation\/digimesdk\/workoutconfiguration\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutconfiguration\/activityvalue","title":"let activityValue: Int","type":"property"},{"path":"\/documentation\/digimesdk\/workoutconfiguration\/harmonized-swift.property","title":"let harmonized: Harmonized","type":"property"},{"path":"\/documentation\/digimesdk\/workoutconfiguration\/locationvalue","title":"let locationValue: Int","type":"property"},{"path":"\/documentation\/digimesdk\/workoutconfiguration\/swimmingvalue","title":"let swimmingValue: Int","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutconfiguration\/make(from:)","title":"static func make(from: [String : Any]) throws -> WorkoutConfiguration","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutconfiguration\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/workoutconfiguration\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutconfiguration\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/workoutconfiguration\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/workoutconfiguration\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/workoutconfiguration","title":"WorkoutConfiguration","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutevent\/harmonized-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimesdk\/workoutevent\/harmonized-swift.struct\/init(value:description:metadata:)","title":"init(value: Int, description: String, metadata: Metadata?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutevent\/harmonized-swift.struct\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/digimesdk\/workoutevent\/harmonized-swift.struct\/metadata","title":"let metadata: Metadata?","type":"property"},{"path":"\/documentation\/digimesdk\/workoutevent\/harmonized-swift.struct\/value","title":"let value: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutevent\/harmonized-swift.struct\/copywith(value:description:metadata:)","title":"func copyWith(value: Int?, description: String?, metadata: Metadata?) -> Harmonized","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutevent\/harmonized-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/workoutevent\/harmonized-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutevent\/harmonized-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/workoutevent\/harmonized-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/workoutevent\/harmonized-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutevent\/harmonized-swift.struct\/make(from:)","title":"static func make(from: [String : Any]) throws -> WorkoutEvent.Harmonized","type":"method"}],"path":"\/documentation\/digimesdk\/workoutevent\/harmonized-swift.struct\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/workoutevent\/harmonized-swift.struct","title":"WorkoutEvent.Harmonized","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutevent\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimesdk\/workoutevent\/init(starttimestamp:endtimestamp:duration:harmonized:)","title":"init(startTimestamp: Double, endTimestamp: Double, duration: Double, harmonized: Harmonized)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutevent\/duration","title":"let duration: Double","type":"property"},{"path":"\/documentation\/digimesdk\/workoutevent\/endtimestamp","title":"let endTimestamp: Double","type":"property"},{"path":"\/documentation\/digimesdk\/workoutevent\/harmonized-swift.property","title":"let harmonized: Harmonized","type":"property"},{"path":"\/documentation\/digimesdk\/workoutevent\/starttimestamp","title":"let startTimestamp: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutevent\/copywith(starttimestamp:endtimestamp:duration:harmonized:)","title":"func copyWith(startTimestamp: Double?, endTimestamp: Double?, duration: Double?, harmonized: Harmonized?) -> WorkoutEvent","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutevent\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/workoutevent\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutevent\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/workoutevent\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/workoutevent\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutevent\/make(from:)","title":"static func make(from: [String : Any]) throws -> WorkoutEvent","type":"method"}],"path":"\/documentation\/digimesdk\/workoutevent\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/workoutevent","title":"WorkoutEvent","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutroute\/harmonized-swift.struct\/init(count:routes:metadata:)","title":"init(count: Int, routes: [Route], metadata: Metadata?)","type":"init"},{"path":"\/documentation\/digimesdk\/workoutroute\/harmonized-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutroute\/harmonized-swift.struct\/count","title":"let count: Int","type":"property"},{"path":"\/documentation\/digimesdk\/workoutroute\/harmonized-swift.struct\/metadata","title":"let metadata: Metadata?","type":"property"},{"path":"\/documentation\/digimesdk\/workoutroute\/harmonized-swift.struct\/routes","title":"let routes: [Route]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutroute\/harmonized-swift.struct\/copywith(count:routes:metadata:)","title":"func copyWith(count: Int?, routes: [Route]?, metadata: Metadata?) -> Harmonized","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutroute\/harmonized-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/workoutroute\/harmonized-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutroute\/harmonized-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/workoutroute\/harmonized-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/workoutroute\/harmonized-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutroute\/harmonized-swift.struct\/make(from:)","title":"static func make(from: [String : Any]) throws -> WorkoutRoute.Harmonized","type":"method"}],"path":"\/documentation\/digimesdk\/workoutroute\/harmonized-swift.struct\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/workoutroute\/harmonized-swift.struct","title":"WorkoutRoute.Harmonized","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutroute\/location\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimesdk\/workoutroute\/location\/init(latitude:longitude:altitude:course:courseaccuracy:floor:horizontalaccuracy:speed:speedaccuracy:timestamp:verticalaccuracy:)","title":"init(latitude: Double, longitude: Double, altitude: Double, course: Double, courseAccuracy: Double?, floor: Int?, horizontalAccuracy: Double, speed: Double, speedAccuracy: Double?, timestamp: Double, verticalAccuracy: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutroute\/location\/altitude","title":"let altitude: Double","type":"property"},{"path":"\/documentation\/digimesdk\/workoutroute\/location\/course","title":"let course: Double","type":"property"},{"path":"\/documentation\/digimesdk\/workoutroute\/location\/courseaccuracy","title":"let courseAccuracy: Double?","type":"property"},{"path":"\/documentation\/digimesdk\/workoutroute\/location\/floor","title":"let floor: Int?","type":"property"},{"path":"\/documentation\/digimesdk\/workoutroute\/location\/horizontalaccuracy","title":"let horizontalAccuracy: Double","type":"property"},{"path":"\/documentation\/digimesdk\/workoutroute\/location\/latitude","title":"let latitude: Double","type":"property"},{"path":"\/documentation\/digimesdk\/workoutroute\/location\/longitude","title":"let longitude: Double","type":"property"},{"path":"\/documentation\/digimesdk\/workoutroute\/location\/speed","title":"let speed: Double","type":"property"},{"path":"\/documentation\/digimesdk\/workoutroute\/location\/speedaccuracy","title":"let speedAccuracy: Double?","type":"property"},{"path":"\/documentation\/digimesdk\/workoutroute\/location\/timestamp","title":"let timestamp: Double","type":"property"},{"path":"\/documentation\/digimesdk\/workoutroute\/location\/verticalaccuracy","title":"let verticalAccuracy: Double","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutroute\/location\/collect(from:)","title":"static func collect(from: [Any]) throws -> [WorkoutRoute.Location]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutroute\/location\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/workoutroute\/location\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutroute\/location\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/workoutroute\/location\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/workoutroute\/location\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutroute\/location\/make(from:)","title":"static func make(from: [String : Any]) throws -> WorkoutRoute.Location","type":"method"}],"path":"\/documentation\/digimesdk\/workoutroute\/location\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/workoutroute\/location","title":"WorkoutRoute.Location","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutroute\/route\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimesdk\/workoutroute\/route\/init(locations:done:)","title":"init(locations: [Location], done: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutroute\/route\/done","title":"let done: Bool","type":"property"},{"path":"\/documentation\/digimesdk\/workoutroute\/route\/locations","title":"let locations: [Location]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutroute\/route\/collect(from:)","title":"static func collect(from: [Any]) throws -> [WorkoutRoute.Route]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutroute\/route\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/workoutroute\/route\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutroute\/route\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/workoutroute\/route\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/workoutroute\/route\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutroute\/route\/make(from:)","title":"static func make(from: [String : Any]) throws -> WorkoutRoute.Route","type":"method"}],"path":"\/documentation\/digimesdk\/workoutroute\/route\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/workoutroute\/route","title":"WorkoutRoute.Route","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutroute\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimesdk\/workoutroute\/init(identifier:starttimestamp:endtimestamp:device:sourcerevision:harmonized:)","title":"init(identifier: String, startTimestamp: Double, endTimestamp: Double, device: Device?, sourceRevision: SourceRevision, harmonized: Harmonized)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutroute\/device","title":"let device: Device?","type":"property"},{"path":"\/documentation\/digimesdk\/workoutroute\/endtimestamp","title":"let endTimestamp: Double","type":"property"},{"path":"\/documentation\/digimesdk\/workoutroute\/harmonized-swift.property","title":"let harmonized: Harmonized","type":"property"},{"path":"\/documentation\/digimesdk\/workoutroute\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/digimesdk\/workoutroute\/sourcerevision","title":"let sourceRevision: SourceRevision","type":"property"},{"path":"\/documentation\/digimesdk\/workoutroute\/starttimestamp","title":"let startTimestamp: Double","type":"property"},{"path":"\/documentation\/digimesdk\/workoutroute\/uuid","title":"let uuid: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutroute\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/workoutroute\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutroute\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/workoutroute\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/workoutroute\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workoutroute\/make(from:)","title":"static func make(from: [String : Any]) throws -> WorkoutRoute","type":"method"}],"path":"\/documentation\/digimesdk\/workoutroute\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/workoutroute","title":"WorkoutRoute","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/activitysummarycompletionhandler","title":"ActivitySummaryCompletionHandler","type":"typealias"},{"path":"\/documentation\/digimesdk\/activitysummaryquery","title":"ActivitySummaryQuery","type":"typealias"},{"path":"\/documentation\/digimesdk\/anchor","title":"Anchor","type":"typealias"},{"path":"\/documentation\/digimesdk\/anchoredobjectquery","title":"AnchoredObjectQuery","type":"typealias"},{"path":"\/documentation\/digimesdk\/anchoredresultshandler","title":"AnchoredResultsHandler","type":"typealias"},{"path":"\/documentation\/digimesdk\/categoryresultshandler","title":"CategoryResultsHandler","type":"typealias"},{"path":"\/documentation\/digimesdk\/correlationcompletionhandler","title":"CorrelationCompletionHandler","type":"typealias"},{"path":"\/documentation\/digimesdk\/correlationquery","title":"CorrelationQuery","type":"typealias"},{"path":"\/documentation\/digimesdk\/correlationresultshandler","title":"CorrelationResultsHandler","type":"typealias"},{"path":"\/documentation\/digimesdk\/deletioncompletionblock","title":"DeletionCompletionBlock","type":"typealias"},{"path":"\/documentation\/digimesdk\/electrocardiogramresultshandler","title":"ElectrocardiogramResultsHandler","type":"typealias"},{"path":"\/documentation\/digimesdk\/heartbeatseriesresultsdatahandler","title":"HeartbeatSeriesResultsDataHandler","type":"typealias"},{"path":"\/documentation\/digimesdk\/loghandler","title":"LogHandler","type":"typealias"},{"path":"\/documentation\/digimesdk\/loglevelmask","title":"LogLevelMask","type":"typealias"},{"path":"\/documentation\/digimesdk\/observerquery","title":"ObserverQuery","type":"typealias"},{"path":"\/documentation\/digimesdk\/observerupdatehandler","title":"ObserverUpdateHandler","type":"typealias"},{"path":"\/documentation\/digimesdk\/preferredunitscompeltion","title":"PreferredUnitsCompeltion","type":"typealias"},{"path":"\/documentation\/digimesdk\/quantityresultshandler","title":"QuantityResultsHandler","type":"typealias"},{"path":"\/documentation\/digimesdk\/query","title":"Query","type":"typealias"},{"path":"\/documentation\/digimesdk\/samplequery","title":"SampleQuery","type":"typealias"},{"path":"\/documentation\/digimesdk\/sampleresultshandler","title":"SampleResultsHandler","type":"typealias"},{"path":"\/documentation\/digimesdk\/sourcecompletionhandler","title":"SourceCompletionHandler","type":"typealias"},{"path":"\/documentation\/digimesdk\/sourcequery","title":"SourceQuery","type":"typealias"},{"path":"\/documentation\/digimesdk\/statisticscollectionquery","title":"StatisticsCollectionQuery","type":"typealias"},{"path":"\/documentation\/digimesdk\/statisticscompletionhandler","title":"StatisticsCompletionHandler","type":"typealias"},{"path":"\/documentation\/digimesdk\/statisticsquery","title":"StatisticsQuery","type":"typealias"},{"path":"\/documentation\/digimesdk\/statuscompletionblock","title":"StatusCompletionBlock","type":"typealias"},{"path":"\/documentation\/digimesdk\/workoutresultshandler","title":"WorkoutResultsHandler","type":"typealias"},{"path":"\/documentation\/digimesdk\/workoutrouteresultsdatahandler","title":"WorkoutRouteResultsDataHandler","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/activitysummarytype\/activitysummarytype","title":"case activitySummaryType","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/activitysummarytype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/activitysummarytype\/original","title":"var original: HKObjectType?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/activitysummarytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimesdk\/activitysummarytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/activitysummarytype\/make(from:)","title":"static func make(from: String) throws -> Self","type":"method"}],"path":"\/documentation\/digimesdk\/activitysummarytype\/objecttype-implementations","title":"ObjectType Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/activitysummarytype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/activitysummarytype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimesdk\/activitysummarytype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/activitysummarytype","title":"ActivitySummaryType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/categorytype\/abdominalcramps","title":"case abdominalCramps","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/acne","title":"case acne","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/appetitechanges","title":"case appetiteChanges","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/applestandhour","title":"case appleStandHour","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/applewalkingsteadinessevent","title":"case appleWalkingSteadinessEvent","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/audioexposureevent","title":"case audioExposureEvent","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/bladderincontinence","title":"case bladderIncontinence","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/bloating","title":"case bloating","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/breastpain","title":"case breastPain","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/cervicalmucusquality","title":"case cervicalMucusQuality","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/chesttightnessorpain","title":"case chestTightnessOrPain","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/chills","title":"case chills","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/constipation","title":"case constipation","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/contraceptive","title":"case contraceptive","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/coughing","title":"case coughing","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/diarrhea","title":"case diarrhea","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/dizziness","title":"case dizziness","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/dryskin","title":"case drySkin","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/environmentalaudioexposureevent","title":"case environmentalAudioExposureEvent","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/fainting","title":"case fainting","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/fatigue","title":"case fatigue","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/fever","title":"case fever","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/generalizedbodyache","title":"case generalizedBodyAche","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/hairloss","title":"case hairLoss","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/handwashingevent","title":"case handwashingEvent","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/headache","title":"case headache","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/headphoneaudioexposureevent","title":"case headphoneAudioExposureEvent","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/heartburn","title":"case heartburn","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/highheartrateevent","title":"case highHeartRateEvent","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/hotflashes","title":"case hotFlashes","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/infrequentmenstrualcycles","title":"case infrequentMenstrualCycles","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/intermenstrualbleeding","title":"case intermenstrualBleeding","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/irregularheartrhythmevent","title":"case irregularHeartRhythmEvent","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/irregularmenstrualcycles","title":"case irregularMenstrualCycles","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/lactation","title":"case lactation","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/lossofsmell","title":"case lossOfSmell","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/lossoftaste","title":"case lossOfTaste","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/lowcardiofitnessevent","title":"case lowCardioFitnessEvent","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/lowheartrateevent","title":"case lowHeartRateEvent","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/lowerbackpain","title":"case lowerBackPain","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/memorylapse","title":"case memoryLapse","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/menstrualflow","title":"case menstrualFlow","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/mindfulsession","title":"case mindfulSession","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/moodchanges","title":"case moodChanges","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/nausea","title":"case nausea","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/nightsweats","title":"case nightSweats","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/ovulationtestresult","title":"case ovulationTestResult","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/pelvicpain","title":"case pelvicPain","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/persistentintermenstrualbleeding","title":"case persistentIntermenstrualBleeding","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/pregnancy","title":"case pregnancy","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/pregnancytestresult","title":"case pregnancyTestResult","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/progesteronetestresult","title":"case progesteroneTestResult","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/prolongedmenstrualperiods","title":"case prolongedMenstrualPeriods","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/rapidpoundingorflutteringheartbeat","title":"case rapidPoundingOrFlutteringHeartbeat","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/runnynose","title":"case runnyNose","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/sexualactivity","title":"case sexualActivity","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/shortnessofbreath","title":"case shortnessOfBreath","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/sinuscongestion","title":"case sinusCongestion","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/skippedheartbeat","title":"case skippedHeartbeat","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/sleepanalysis","title":"case sleepAnalysis","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/sleepchanges","title":"case sleepChanges","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/sorethroat","title":"case soreThroat","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/toothbrushingevent","title":"case toothbrushingEvent","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/vaginaldryness","title":"case vaginalDryness","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/vomiting","title":"case vomiting","type":"case"},{"path":"\/documentation\/digimesdk\/categorytype\/wheezing","title":"case wheezing","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/categorytype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/categorytype\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/digimesdk\/categorytype\/original","title":"var original: HKObjectType?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/categorytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimesdk\/categorytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/categorytype\/make(from:)","title":"static func make(from: String) throws -> Self","type":"method"}],"path":"\/documentation\/digimesdk\/categorytype\/objecttype-implementations","title":"ObjectType Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/categorytype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/categorytype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimesdk\/categorytype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/categorytype","title":"CategoryType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/characteristictype\/activitymovemode","title":"case activityMoveMode","type":"case"},{"path":"\/documentation\/digimesdk\/characteristictype\/biologicalsex","title":"case biologicalSex","type":"case"},{"path":"\/documentation\/digimesdk\/characteristictype\/bloodtype","title":"case bloodType","type":"case"},{"path":"\/documentation\/digimesdk\/characteristictype\/dateofbirth","title":"case dateOfBirth","type":"case"},{"path":"\/documentation\/digimesdk\/characteristictype\/fitzpatrickskintype","title":"case fitzpatrickSkinType","type":"case"},{"path":"\/documentation\/digimesdk\/characteristictype\/wheelchairuse","title":"case wheelchairUse","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/characteristictype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/characteristictype\/original","title":"var original: HKObjectType?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/characteristictype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimesdk\/characteristictype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/characteristictype\/make(from:)","title":"static func make(from: String) throws -> Self","type":"method"}],"path":"\/documentation\/digimesdk\/characteristictype\/objecttype-implementations","title":"ObjectType Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/characteristictype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/characteristictype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimesdk\/characteristictype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/characteristictype","title":"CharacteristicType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/contracttimerangetype\/alltime","title":"case allTime","type":"case"},{"path":"\/documentation\/digimesdk\/contracttimerangetype\/rolling","title":"case rolling","type":"case"},{"path":"\/documentation\/digimesdk\/contracttimerangetype\/since","title":"case since","type":"case"},{"path":"\/documentation\/digimesdk\/contracttimerangetype\/until","title":"case until","type":"case"},{"path":"\/documentation\/digimesdk\/contracttimerangetype\/window","title":"case window","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/contracttimerangetype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/contracttimerangetype\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/contracttimerangetype\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/contracttimerangetype\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/contracttimerangetype\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/contracttimerangetype\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/contracttimerangetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimesdk\/contracttimerangetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/contracttimerangetype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/contracttimerangetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/contracttimerangetype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/digimesdk\/contracttimerangetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimesdk\/contracttimerangetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/contracttimerangetype","title":"ContractTimeRangeType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/correlationtype\/bloodpressure","title":"case bloodPressure","type":"case"},{"path":"\/documentation\/digimesdk\/correlationtype\/food","title":"case food","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/correlationtype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/correlationtype\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/digimesdk\/correlationtype\/original","title":"var original: HKObjectType?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/correlationtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimesdk\/correlationtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/correlationtype\/make(from:)","title":"static func make(from: String) throws -> Self","type":"method"}],"path":"\/documentation\/digimesdk\/correlationtype\/objecttype-implementations","title":"ObjectType Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/correlationtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/correlationtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimesdk\/correlationtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/correlationtype","title":"CorrelationType","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/crypto\/base64encodeddata(from:)","title":"static func base64EncodedData(from: String) throws -> Data","type":"method"}],"path":"\/documentation\/digimesdk\/crypto","title":"Crypto","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/deviceonlyservices\/applehealth","title":"case appleHealth","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/deviceonlyservices\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/deviceonlyservices\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimesdk\/deviceonlyservices\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/deviceonlyservices\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/deviceonlyservices\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimesdk\/deviceonlyservices\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/deviceonlyservices","title":"DeviceOnlyServices","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/documenttype\/cda","title":"case cda","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/documenttype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/documenttype\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/digimesdk\/documenttype\/original","title":"var original: HKObjectType?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/documenttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimesdk\/documenttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/documenttype\/make(from:)","title":"static func make(from: String) throws -> Self","type":"method"}],"path":"\/documentation\/digimesdk\/documenttype\/objecttype-implementations","title":"ObjectType Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/documenttype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/documenttype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimesdk\/documenttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/documenttype","title":"DocumentType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/electrocardiogramtype\/electrocardiogramtype","title":"case electrocardiogramType","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/electrocardiogramtype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/electrocardiogramtype\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/digimesdk\/electrocardiogramtype\/original","title":"var original: HKObjectType?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/electrocardiogramtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimesdk\/electrocardiogramtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/electrocardiogramtype\/make(from:)","title":"static func make(from: String) throws -> Self","type":"method"}],"path":"\/documentation\/digimesdk\/electrocardiogramtype\/objecttype-implementations","title":"ObjectType Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/electrocardiogramtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/electrocardiogramtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimesdk\/electrocardiogramtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/electrocardiogramtype","title":"ElectrocardiogramType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/filemetadata\/mapped(_:)","title":"case mapped(MappedFileMetadata)","type":"case"},{"path":"\/documentation\/digimesdk\/filemetadata\/none","title":"case none","type":"case"},{"path":"\/documentation\/digimesdk\/filemetadata\/raw(_:)","title":"case raw(RawFileMetadata)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/filemetadata\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/digimesdk\/filemetadata\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/filemetadata\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/filemetadata\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/filemetadata\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/digimesdk\/filemetadata\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/filemetadata\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/filemetadata\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/filemetadata","title":"FileMetadata","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/loglevel\/critical","title":"case critical","type":"case"},{"path":"\/documentation\/digimesdk\/loglevel\/debug","title":"case debug","type":"case"},{"path":"\/documentation\/digimesdk\/loglevel\/error","title":"case error","type":"case"},{"path":"\/documentation\/digimesdk\/loglevel\/info","title":"case info","type":"case"},{"path":"\/documentation\/digimesdk\/loglevel\/mixpanel","title":"case mixpanel","type":"case"},{"path":"\/documentation\/digimesdk\/loglevel\/warning","title":"case warning","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/loglevel\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/loglevel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimesdk\/loglevel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/loglevel\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/loglevel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimesdk\/loglevel\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/loglevel","title":"LogLevel","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/metadata\/date(dictionary:)","title":"case date(dictionary: [String : Date]?)","type":"case"},{"path":"\/documentation\/digimesdk\/metadata\/double(dictionary:)","title":"case double(dictionary: [String : Double]?)","type":"case"},{"path":"\/documentation\/digimesdk\/metadata\/string(dictionary:)","title":"case string(dictionary: [String : String]?)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/metadata\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/metadata\/original","title":"var original: [String : Any]?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/metadata\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/metadata\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/metadata\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/metadata\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/metadata\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/metadata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimesdk\/metadata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/metadata\/init(dictionaryliteral:)","title":"init(dictionaryLiteral: (Key, Value)...)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/metadata\/key","title":"Metadata.Key","type":"typealias"},{"path":"\/documentation\/digimesdk\/metadata\/value","title":"Metadata.Value","type":"typealias"}],"path":"\/documentation\/digimesdk\/metadata\/expressiblebydictionaryliteral-implementations","title":"ExpressibleByDictionaryLiteral Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/metadata\/make(from:)","title":"static func make(from: [String : Any]) throws -> Metadata","type":"method"}],"path":"\/documentation\/digimesdk\/metadata\/payload-implementations","title":"Payload Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/metadata","title":"Metadata","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/mimetype\/applicationjson","title":"case applicationJson","type":"case"},{"path":"\/documentation\/digimesdk\/mimetype\/applicationoctetstream","title":"case applicationOctetStream","type":"case"},{"path":"\/documentation\/digimesdk\/mimetype\/applicationpdf","title":"case applicationPdf","type":"case"},{"path":"\/documentation\/digimesdk\/mimetype\/imagebmp","title":"case imageBmp","type":"case"},{"path":"\/documentation\/digimesdk\/mimetype\/imagegif","title":"case imageGif","type":"case"},{"path":"\/documentation\/digimesdk\/mimetype\/imagejpeg","title":"case imageJpeg","type":"case"},{"path":"\/documentation\/digimesdk\/mimetype\/imagepng","title":"case imagePng","type":"case"},{"path":"\/documentation\/digimesdk\/mimetype\/imagetiff","title":"case imageTiff","type":"case"},{"path":"\/documentation\/digimesdk\/mimetype\/textjson","title":"case textJson","type":"case"},{"path":"\/documentation\/digimesdk\/mimetype\/textplain","title":"case textPlain","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/mimetype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/mimetype\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/mimetype\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/mimetype\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/mimetype\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/mimetype\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/mimetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimesdk\/mimetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/mimetype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/mimetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/mimetype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/digimesdk\/mimetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimesdk\/mimetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/mimetype","title":"MimeType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/quantitytype\/activeenergyburned","title":"case activeEnergyBurned","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/appleexercisetime","title":"case appleExerciseTime","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/applemovetime","title":"case appleMoveTime","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/applesleepingwristtemperature","title":"case appleSleepingWristTemperature","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/applestandtime","title":"case appleStandTime","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/applewalkingsteadiness","title":"case appleWalkingSteadiness","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/atrialfibrillationburden","title":"case atrialFibrillationBurden","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/basalbodytemperature","title":"case basalBodyTemperature","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/basalenergyburned","title":"case basalEnergyBurned","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/bloodalcoholcontent","title":"case bloodAlcoholContent","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/bloodglucose","title":"case bloodGlucose","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/bloodpressurediastolic","title":"case bloodPressureDiastolic","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/bloodpressuresystolic","title":"case bloodPressureSystolic","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/bodyfatpercentage","title":"case bodyFatPercentage","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/bodymass","title":"case bodyMass","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/bodymassindex","title":"case bodyMassIndex","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/bodytemperature","title":"case bodyTemperature","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietarybiotin","title":"case dietaryBiotin","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietarycaffeine","title":"case dietaryCaffeine","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietarycalcium","title":"case dietaryCalcium","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietarycarbohydrates","title":"case dietaryCarbohydrates","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietarychloride","title":"case dietaryChloride","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietarycholesterol","title":"case dietaryCholesterol","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietarychromium","title":"case dietaryChromium","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietarycopper","title":"case dietaryCopper","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietaryenergyconsumed","title":"case dietaryEnergyConsumed","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietaryfatmonounsaturated","title":"case dietaryFatMonounsaturated","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietaryfatpolyunsaturated","title":"case dietaryFatPolyunsaturated","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietaryfatsaturated","title":"case dietaryFatSaturated","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietaryfattotal","title":"case dietaryFatTotal","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietaryfiber","title":"case dietaryFiber","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietaryfolate","title":"case dietaryFolate","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietaryiodine","title":"case dietaryIodine","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietaryiron","title":"case dietaryIron","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietarymagnesium","title":"case dietaryMagnesium","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietarymanganese","title":"case dietaryManganese","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietarymolybdenum","title":"case dietaryMolybdenum","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietaryniacin","title":"case dietaryNiacin","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietarypantothenicacid","title":"case dietaryPantothenicAcid","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietaryphosphorus","title":"case dietaryPhosphorus","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietarypotassium","title":"case dietaryPotassium","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietaryprotein","title":"case dietaryProtein","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietaryriboflavin","title":"case dietaryRiboflavin","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietaryselenium","title":"case dietarySelenium","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietarysodium","title":"case dietarySodium","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietarysugar","title":"case dietarySugar","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietarythiamin","title":"case dietaryThiamin","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietaryvitamina","title":"case dietaryVitaminA","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietaryvitaminb12","title":"case dietaryVitaminB12","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietaryvitaminb6","title":"case dietaryVitaminB6","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietaryvitaminc","title":"case dietaryVitaminC","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietaryvitamind","title":"case dietaryVitaminD","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietaryvitamine","title":"case dietaryVitaminE","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietaryvitamink","title":"case dietaryVitaminK","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietarywater","title":"case dietaryWater","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/dietaryzinc","title":"case dietaryZinc","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/distancecycling","title":"case distanceCycling","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/distancedownhillsnowsports","title":"case distanceDownhillSnowSports","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/distanceswimming","title":"case distanceSwimming","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/distancewalkingrunning","title":"case distanceWalkingRunning","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/distancewheelchair","title":"case distanceWheelchair","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/electrodermalactivity","title":"case electrodermalActivity","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/environmentalaudioexposure","title":"case environmentalAudioExposure","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/flightsclimbed","title":"case flightsClimbed","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/forcedexpiratoryvolume1","title":"case forcedExpiratoryVolume1","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/forcedvitalcapacity","title":"case forcedVitalCapacity","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/headphoneaudioexposure","title":"case headphoneAudioExposure","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/heartrate","title":"case heartRate","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/heartraterecoveryoneminute","title":"case heartRateRecoveryOneMinute","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/heartratevariabilitysdnn","title":"case heartRateVariabilitySDNN","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/height","title":"case height","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/inhalerusage","title":"case inhalerUsage","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/insulindelivery","title":"case insulinDelivery","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/leanbodymass","title":"case leanBodyMass","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/nikefuel","title":"case nikeFuel","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/numberofalcoholicbeverages","title":"case numberOfAlcoholicBeverages","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/numberoftimesfallen","title":"case numberOfTimesFallen","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/oxygensaturation","title":"case oxygenSaturation","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/peakexpiratoryflowrate","title":"case peakExpiratoryFlowRate","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/peripheralperfusionindex","title":"case peripheralPerfusionIndex","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/pushcount","title":"case pushCount","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/respiratoryrate","title":"case respiratoryRate","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/restingheartrate","title":"case restingHeartRate","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/runninggroundcontacttime","title":"case runningGroundContactTime","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/runningpower","title":"case runningPower","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/runningspeed","title":"case runningSpeed","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/runningstridelength","title":"case runningStrideLength","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/runningverticaloscillation","title":"case runningVerticalOscillation","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/sixminutewalktestdistance","title":"case sixMinuteWalkTestDistance","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/stairascentspeed","title":"case stairAscentSpeed","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/stairdescentspeed","title":"case stairDescentSpeed","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/stepcount","title":"case stepCount","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/swimmingstrokecount","title":"case swimmingStrokeCount","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/underwaterdepth","title":"case underwaterDepth","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/uvexposure","title":"case uvExposure","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/vo2max","title":"case vo2Max","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/waistcircumference","title":"case waistCircumference","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/walkingasymmetrypercentage","title":"case walkingAsymmetryPercentage","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/walkingdoublesupportpercentage","title":"case walkingDoubleSupportPercentage","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/walkingheartrateaverage","title":"case walkingHeartRateAverage","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/walkingspeed","title":"case walkingSpeed","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/walkingsteplength","title":"case walkingStepLength","type":"case"},{"path":"\/documentation\/digimesdk\/quantitytype\/watertemperature","title":"case waterTemperature","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/quantitytype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/quantitytype\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/digimesdk\/quantitytype\/original","title":"var original: HKObjectType?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/quantitytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimesdk\/quantitytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/quantitytype\/make(from:)","title":"static func make(from: String) throws -> Self","type":"method"}],"path":"\/documentation\/digimesdk\/quantitytype\/objecttype-implementations","title":"ObjectType Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/quantitytype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/quantitytype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimesdk\/quantitytype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/quantitytype","title":"QuantityType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/sdkerror\/addingservicefailed","title":"case addingServiceFailed","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/alreadyreadingallfiles","title":"case alreadyReadingAllFiles","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/authorizationcancelled","title":"case authorizationCancelled","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/authorizationfailed(code:)","title":"case authorizationFailed(code: String)","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/authorizationrequired","title":"case authorizationRequired","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/badencoding(message:)","title":"case badEncoding(message: String)","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/certificateencodingdataerror","title":"case certificateEncodingDataError","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/certificateformatisnotsupported","title":"case certificateFormatIsNotSupported","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/certificateparsererror(error:)","title":"case certificateParserError(error: Error)","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/certificateparserinvaliddata","title":"case certificateParserInvalidData","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/certificatetypeisnotsupported","title":"case certificateTypeIsNotSupported","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/certificateverifytimerangeerror","title":"case certificateVerifyTimeRangeError","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/errorcreatingrequestjwttodownloadfile","title":"case errorCreatingRequestJwtToDownloadFile","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/errorcreatingrequestjwttotriggerdata","title":"case errorCreatingRequestJwtToTriggerData","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/errordecodedingjwtpreauthcode","title":"case errorDecodedingJwtPreAuthCode","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/errordecryptingresponse","title":"case errorDecryptingResponse","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/errorextractingreferencecodefromjwt","title":"case errorExtractingReferenceCodeFromJwt","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/errorextractingtokensfromjwt","title":"case errorExtractingTokensFromJwt","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/errormakingrequest","title":"case errorMakingRequest","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/errormakingrequestnoresponse","title":"case errorMakingRequestNoResponse","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/errormakingrequestwhenparsingresponse","title":"case errorMakingRequestWhenParsingResponse","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/errorparsingheadersmetadataintheresponse","title":"case errorParsingHeadersMetadataInTheResponse","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/filedownloadoperationerror(error:)","title":"case fileDownloadOperationError(error: Error)","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/filelistpollingtimeout","title":"case fileListPollingTimeout","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/healthdataerror(message:)","title":"case healthDataError(message: String)","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/healthdataerrorerror(error:)","title":"case healthDataErrorError(error: Error)","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/healthdatafetchstatistics(error:)","title":"case healthDataFetchStatistics(error: Error)","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/healthdataisnotavailable","title":"case healthDataIsNotAvailable","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/healthdatanotsupportshealthrecords","title":"case healthDataNotSupportsHealthRecords","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/healthdataunabletocreatequantitytype","title":"case healthDataUnableToCreateQuantityType","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/healthdataunabletouploadlogevent","title":"case healthDataUnableToUploadLogEvent","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/httpresponseerror(statuscode:apierror:)","title":"case httpResponseError(statusCode: Int, apiError: APIError?)","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/incorrectcontracttype","title":"case incorrectContractType","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/invalidappid","title":"case invalidAppId","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/invalidauthorizationrequestjwt","title":"case invalidAuthorizationRequestJwt","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/invaliddata","title":"case invalidData","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/invaliddeleteusertokenrequestjwt","title":"case invalidDeleteUserTokenRequestJwt","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/invalididentifier(message:)","title":"case invalidIdentifier(message: String)","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/invalidpreauthorizationrequestjwt","title":"case invalidPreAuthorizationRequestJwt","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/invalidprivateorpublickey","title":"case invalidPrivateOrPublicKey","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/invalidreferencetokenrequestjwt","title":"case invalidReferenceTokenRequestJwt","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/invalidrefreshtokensrequestjwt","title":"case invalidRefreshTokensRequestJwt","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/invalidsdkversion","title":"case invalidSdkVersion","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/invalidsession","title":"case invalidSession","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/invalidtype(message:)","title":"case invalidType(message: String)","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/invalidvalue(message:)","title":"case invalidValue(message: String)","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/invalidwritemetadata","title":"case invalidWriteMetadata","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/linkedcontractnotauthorized","title":"case linkedContractNotAuthorized","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/nourlscheme","title":"case noUrlScheme","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/notavailable(message:)","title":"case notAvailable(message: String)","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/other","title":"case other","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/parsingfailed(message:)","title":"case parsingFailed(message: String)","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/readaccountserror","title":"case readAccountsError","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/scopeoutofbounds","title":"case scopeOutOfBounds","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/unexpectederrorwhenparsingconsentresponse","title":"case unexpectedErrorWhenParsingConsentResponse","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/unknown(message:)","title":"case unknown(message: String)","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/urlrequestfailed(error:)","title":"case urlRequestFailed(error: Error)","type":"case"},{"path":"\/documentation\/digimesdk\/sdkerror\/writerequestfailure","title":"case writeRequestFailure","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/sdkerror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/digimesdk\/sdkerror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/sdkerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/digimesdk\/sdkerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/sdkerror","title":"SDKError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/seriestype\/heartbeatseries","title":"case heartbeatSeries","type":"case"},{"path":"\/documentation\/digimesdk\/seriestype\/workoutroute","title":"case workoutRoute","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/seriestype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/seriestype\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/digimesdk\/seriestype\/original","title":"var original: HKObjectType?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/seriestype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimesdk\/seriestype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/seriestype\/make(from:)","title":"static func make(from: String) throws -> Self","type":"method"}],"path":"\/documentation\/digimesdk\/seriestype\/objecttype-implementations","title":"ObjectType Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/seriestype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/seriestype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimesdk\/seriestype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/seriestype","title":"SeriesType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/syncstate\/completed","title":"case completed","type":"case"},{"path":"\/documentation\/digimesdk\/syncstate\/partial","title":"case partial","type":"case"},{"path":"\/documentation\/digimesdk\/syncstate\/pending","title":"case pending","type":"case"},{"path":"\/documentation\/digimesdk\/syncstate\/running","title":"case running","type":"case"},{"path":"\/documentation\/digimesdk\/syncstate\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/syncstate\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/syncstate\/isrunning","title":"var isRunning: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/syncstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimesdk\/syncstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/syncstate\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/syncstate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/syncstate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimesdk\/syncstate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/syncstate","title":"SyncState","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/timerange\/after(from:)","title":"case after(from: Date)","type":"case"},{"path":"\/documentation\/digimesdk\/timerange\/before(to:)","title":"case before(to: Date)","type":"case"},{"path":"\/documentation\/digimesdk\/timerange\/between(from:to:)","title":"case between(from: Date, to: Date)","type":"case"},{"path":"\/documentation\/digimesdk\/timerange\/last(amount:unit:)","title":"case last(amount: Int, unit: Unit)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/timerange\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/timerange\/unit\/day","title":"case day","type":"case"},{"path":"\/documentation\/digimesdk\/timerange\/unit\/month","title":"case month","type":"case"},{"path":"\/documentation\/digimesdk\/timerange\/unit\/year","title":"case year","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/timerange\/unit\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/timerange\/unit\/calendarunit","title":"var calendarUnit: Calendar.Component","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/timerange\/unit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimesdk\/timerange\/unit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/timerange\/unit\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/timerange\/unit\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimesdk\/timerange\/unit\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/timerange\/unit","title":"TimeRange.Unit","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/timerange\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimesdk\/timerange\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/timerange\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimesdk\/timerange\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimesdk\/timerange\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/timerange","title":"TimeRange","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/updatefrequency\/daily","title":"case daily","type":"case"},{"path":"\/documentation\/digimesdk\/updatefrequency\/hourly","title":"case hourly","type":"case"},{"path":"\/documentation\/digimesdk\/updatefrequency\/immediate","title":"case immediate","type":"case"},{"path":"\/documentation\/digimesdk\/updatefrequency\/weekly","title":"case weekly","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/updatefrequency\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/updatefrequency\/make(from:)","title":"static func make(from: Int) throws -> UpdateFrequency","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/updatefrequency\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimesdk\/updatefrequency\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/updatefrequency\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/updatefrequency\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimesdk\/updatefrequency\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/updatefrequency","title":"UpdateFrequency","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/visionprescriptiontype\/visionprescription","title":"case visionPrescription","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/visionprescriptiontype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/visionprescriptiontype\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/digimesdk\/visionprescriptiontype\/original","title":"var original: HKObjectType?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/visionprescriptiontype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimesdk\/visionprescriptiontype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/visionprescriptiontype\/make(from:)","title":"static func make(from: String) throws -> Self","type":"method"}],"path":"\/documentation\/digimesdk\/visionprescriptiontype\/objecttype-implementations","title":"ObjectType Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/visionprescriptiontype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/visionprescriptiontype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimesdk\/visionprescriptiontype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/visionprescriptiontype","title":"VisionPrescriptionType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workouttype\/workouttype","title":"case workoutType","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workouttype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workouttype\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/digimesdk\/workouttype\/original","title":"var original: HKObjectType?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workouttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimesdk\/workouttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workouttype\/make(from:)","title":"static func make(from: String) throws -> Self","type":"method"}],"path":"\/documentation\/digimesdk\/workouttype\/objecttype-implementations","title":"ObjectType Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workouttype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimesdk\/workouttype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimesdk\/workouttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimesdk\/workouttype","title":"WorkoutType","type":"enum"}],"path":"\/documentation\/digimesdk","title":"DigiMeSDK","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}